{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyMvl/T0JOfPRcDZgrqLhdrY",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/MianUsman2209/EXCEL-PROJECT/blob/main/Pakistan%20Population%20Analysis\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 37,
      "metadata": {
        "id": "OM4g402ckLMO"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "PAKISTAN POPULATION ANALYSIS"
      ],
      "metadata": {
        "id": "t3cegcxbltzN"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "TABLE OF CONTENTS\n",
        "1. IMPORTING LIBRARIES\n",
        "\n",
        "2. LOADING DATA\n",
        "\n",
        "3. Exploratory Data Analysis\n",
        "\n",
        "4. DATA CLEANING\n",
        "\n",
        "5. HYPOTHESIS BUIDLING\n",
        "\n",
        "6. RULAR POPULATION ANALYSIS\n",
        "\n",
        "7. URBAN POPULATION ANALYSIS\n",
        "\n",
        "8. FINDINGS\n",
        "\n",
        "9. FINDINGS"
      ],
      "metadata": {
        "id": "12Qd0jlql5Zz"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "PURPOSE\n",
        "Which Area Or Provice has the highest Area per square?\n",
        "\n",
        "What is the highest Area Occupied by a province(Province Name)?\n",
        "\n",
        "How much population for Rular Area is increased from 1998 to 2017 ?\n",
        "\n",
        "The population Of Rular in percentage?\n",
        "\n",
        "How much population for Urban Area is increased from 1998 to 2017 ?\n",
        "\n",
        "The population Of Urban in percentage?"
      ],
      "metadata": {
        "id": "0kC_EJ-mmF6x"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#importing Neccessory Libraries\n",
        "\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "from matplotlib import colors\n",
        "\n",
        "import warnings\n",
        "import sys\n",
        "if not sys.warnoptions:\n",
        "    warnings.simplefilter(\"ignore\")\n",
        "np.random.seed(42)"
      ],
      "metadata": {
        "id": "qvAtuWHRmKVJ"
      },
      "execution_count": 38,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "LOADING DATA SET"
      ],
      "metadata": {
        "id": "dEiusSNAmQu8"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "df = pd.read_csv('/content/sub-division_population_of_pakistan[1].csv')"
      ],
      "metadata": {
        "id": "T6VknG-dmTNb"
      },
      "execution_count": 39,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "_EMlmFkDnBvs"
      },
      "execution_count": 39,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "The dataset collected from the Source has the following Description:\n",
        "Description\n",
        "This dataset contains demographic information from the Pakistan Population Census conducted in 2017. It provides detailed population data at various administrative levels within Pakistan, including provinces, divisions, districts, and sub-divisions. The dataset also includes information on urban and rural populations, gender distribution, transgender individuals, sex ratios, population figures from the 1998 census, and annual growth rates.\n",
        "\n",
        "Features\n",
        "Province: The administrative provinces or regions of Pakistan where the census data was collected.\n",
        "\n",
        "Division: The divisions within each province. Divisions are the second level of administrative divisions in Pakistan.\n",
        "\n",
        "District: Districts within each division, representing larger administrative units.\n",
        "\n",
        "Sub-Division: Sub-divisions or tehsils within each district, providing more localized data.\n",
        "\n",
        "Area: The land area (in square kilometers) of each sub-division.\n",
        "\n",
        "Urban Population 2017: The population of urban areas within each sub-division for the year 2017.\n",
        "\n",
        "Rural Population 2017: The population of rural areas within each sub-division for the year 2017.\n",
        "\n",
        "Male Population 2017: The male population within each sub-division for the year 2017.\n",
        "\n",
        "Female Population 2017: The female population within each sub-division for the year 2017.\n",
        "\n",
        "Transgender Population 2017: The population of transgender individuals within each sub-division for the year 2017.\n",
        "\n",
        "Sex Ratio 2017: The sex ratio, calculated as the number of females per 1000 males, within each sub-division for the year 2017.\n",
        "\n",
        "Population in 1998: The total population of each sub-division as recorded in the 1998 census.\n",
        "\n",
        "Annual Growth Rate: The annual growth rate of the population in each sub-division, calculated as the percentage increase from 1998 to 2017.\n",
        "\n",
        "Data Source\n",
        "The data in this dataset was collected from official Pakistan Population Census reports and may include data from various government sources. It is essential to provide proper attribution and reference the original sources when using this dataset for analysis or research.\n",
        "\n",
        "Data Usage\n",
        "Researchers and analysts can use this dataset to explore demographic trends, population growth, urbanization rates, gender distribution, and more within Pakistan at different administrative levels. Ensure compliance with ethical and legal guidelines when using this data for research or public sharing.\n",
        "\n",
        "Please note that this description is a template, and you should adapt it based on the actual data sources and specific details of your dataset when creating it for Kaggle or any other platform."
      ],
      "metadata": {
        "id": "YBhd6JpcnJlq"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "yTntztyynK3E",
        "outputId": "d7605089-1c9f-4b11-ea7b-a116cf0876fc"
      },
      "execution_count": 40,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 528 entries, 0 to 527\n",
            "Data columns (total 21 columns):\n",
            " #   Column                      Non-Null Count  Dtype  \n",
            "---  ------                      --------------  -----  \n",
            " 0   PROVINCE                    528 non-null    object \n",
            " 1   DIVISION                    528 non-null    object \n",
            " 2   DISTRICT                    528 non-null    object \n",
            " 3   SUB DIVISION                528 non-null    object \n",
            " 4   AREA (sq.km)                528 non-null    float64\n",
            " 5   ALL SEXES (RURAL)           528 non-null    int64  \n",
            " 6   MALE (RURAL)                528 non-null    int64  \n",
            " 7   FEMALE (RURAL)              528 non-null    int64  \n",
            " 8   TRANSGENDER (RURAL)         528 non-null    int64  \n",
            " 9   SEX RATIO (RURAL)           528 non-null    float64\n",
            " 10  AVG HOUSEHOLD SIZE (RURAL)  528 non-null    float64\n",
            " 11  POPULATION 1998 (RURAL)     528 non-null    int64  \n",
            " 12  ANNUAL GROWTH RATE (RURAL)  528 non-null    float64\n",
            " 13  ALL SEXES (URBAN)           528 non-null    int64  \n",
            " 14  MALE (URBAN)                528 non-null    int64  \n",
            " 15  FEMALE (URBAN)              528 non-null    int64  \n",
            " 16  TRANSGENDER (URBAN)         528 non-null    int64  \n",
            " 17  SEX RATIO (URBAN)           528 non-null    float64\n",
            " 18  AVG HOUSEHOLD SIZE (URBAN)  528 non-null    float64\n",
            " 19  POPULATION 1998 (URBAN)     528 non-null    int64  \n",
            " 20  ANNUAL GROWTH RATE (URBAN)  528 non-null    float64\n",
            "dtypes: float64(7), int64(10), object(4)\n",
            "memory usage: 86.8+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Defining the styling map\n",
        "def styles(row):\n",
        "    # Defining alternate colors pattern\n",
        "    row_colors = ['#41C9E2', '#FF8E8F']\n",
        "    text_colors = ['#124076', '#5D0E41']\n",
        "\n",
        "    # Targetting the index of the current row\n",
        "    index = df[df.apply(lambda x: (x == row).all(), axis=1)].index[0]\n",
        "\n",
        "    # Determining the background color and text color based on the index\n",
        "    background_color = row_colors[index % len(row_colors)]\n",
        "    text_color = text_colors[index % len(text_colors)]\n",
        "\n",
        "    # Applying styles to the row cells\n",
        "    style = [f'background-color: {background_color}; color: {text_color}; border: 1px double black;'] * len(row)\n",
        "    return style\n",
        "\n",
        "# Applying the styles to the DataFrame\n",
        "styled_df = df.head(8).style.apply(styles, axis=1).set_table_styles([\n",
        "    {\"selector\": \"th\", \"props\": [(\"color\", 'white'), (\"background-color\", \"#A0153E\"), (\"border\", '1px solid black')]}\n",
        "])"
      ],
      "metadata": {
        "id": "bP_F_8RqnYIa"
      },
      "execution_count": 41,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "styled_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 520
        },
        "id": "Sq5Al5xoneIq",
        "outputId": "38b4b946-db5a-417d-94ad-015c0ecaa16a"
      },
      "execution_count": 42,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<pandas.io.formats.style.Styler at 0x7b021d30ec20>"
            ],
            "text/html": [
              "<style type=\"text/css\">\n",
              "#T_15442 th {\n",
              "  color: white;\n",
              "  background-color: #A0153E;\n",
              "  border: 1px solid black;\n",
              "}\n",
              "#T_15442_row0_col0, #T_15442_row0_col1, #T_15442_row0_col2, #T_15442_row0_col3, #T_15442_row0_col4, #T_15442_row0_col5, #T_15442_row0_col6, #T_15442_row0_col7, #T_15442_row0_col8, #T_15442_row0_col9, #T_15442_row0_col10, #T_15442_row0_col11, #T_15442_row0_col12, #T_15442_row0_col13, #T_15442_row0_col14, #T_15442_row0_col15, #T_15442_row0_col16, #T_15442_row0_col17, #T_15442_row0_col18, #T_15442_row0_col19, #T_15442_row0_col20, #T_15442_row2_col0, #T_15442_row2_col1, #T_15442_row2_col2, #T_15442_row2_col3, #T_15442_row2_col4, #T_15442_row2_col5, #T_15442_row2_col6, #T_15442_row2_col7, #T_15442_row2_col8, #T_15442_row2_col9, #T_15442_row2_col10, #T_15442_row2_col11, #T_15442_row2_col12, #T_15442_row2_col13, #T_15442_row2_col14, #T_15442_row2_col15, #T_15442_row2_col16, #T_15442_row2_col17, #T_15442_row2_col18, #T_15442_row2_col19, #T_15442_row2_col20, #T_15442_row4_col0, #T_15442_row4_col1, #T_15442_row4_col2, #T_15442_row4_col3, #T_15442_row4_col4, #T_15442_row4_col5, #T_15442_row4_col6, #T_15442_row4_col7, #T_15442_row4_col8, #T_15442_row4_col9, #T_15442_row4_col10, #T_15442_row4_col11, #T_15442_row4_col12, #T_15442_row4_col13, #T_15442_row4_col14, #T_15442_row4_col15, #T_15442_row4_col16, #T_15442_row4_col17, #T_15442_row4_col18, #T_15442_row4_col19, #T_15442_row4_col20, #T_15442_row6_col0, #T_15442_row6_col1, #T_15442_row6_col2, #T_15442_row6_col3, #T_15442_row6_col4, #T_15442_row6_col5, #T_15442_row6_col6, #T_15442_row6_col7, #T_15442_row6_col8, #T_15442_row6_col9, #T_15442_row6_col10, #T_15442_row6_col11, #T_15442_row6_col12, #T_15442_row6_col13, #T_15442_row6_col14, #T_15442_row6_col15, #T_15442_row6_col16, #T_15442_row6_col17, #T_15442_row6_col18, #T_15442_row6_col19, #T_15442_row6_col20 {\n",
              "  background-color: #41C9E2;\n",
              "  color: #124076;\n",
              "  border: 1px double black;\n",
              "}\n",
              "#T_15442_row1_col0, #T_15442_row1_col1, #T_15442_row1_col2, #T_15442_row1_col3, #T_15442_row1_col4, #T_15442_row1_col5, #T_15442_row1_col6, #T_15442_row1_col7, #T_15442_row1_col8, #T_15442_row1_col9, #T_15442_row1_col10, #T_15442_row1_col11, #T_15442_row1_col12, #T_15442_row1_col13, #T_15442_row1_col14, #T_15442_row1_col15, #T_15442_row1_col16, #T_15442_row1_col17, #T_15442_row1_col18, #T_15442_row1_col19, #T_15442_row1_col20, #T_15442_row3_col0, #T_15442_row3_col1, #T_15442_row3_col2, #T_15442_row3_col3, #T_15442_row3_col4, #T_15442_row3_col5, #T_15442_row3_col6, #T_15442_row3_col7, #T_15442_row3_col8, #T_15442_row3_col9, #T_15442_row3_col10, #T_15442_row3_col11, #T_15442_row3_col12, #T_15442_row3_col13, #T_15442_row3_col14, #T_15442_row3_col15, #T_15442_row3_col16, #T_15442_row3_col17, #T_15442_row3_col18, #T_15442_row3_col19, #T_15442_row3_col20, #T_15442_row5_col0, #T_15442_row5_col1, #T_15442_row5_col2, #T_15442_row5_col3, #T_15442_row5_col4, #T_15442_row5_col5, #T_15442_row5_col6, #T_15442_row5_col7, #T_15442_row5_col8, #T_15442_row5_col9, #T_15442_row5_col10, #T_15442_row5_col11, #T_15442_row5_col12, #T_15442_row5_col13, #T_15442_row5_col14, #T_15442_row5_col15, #T_15442_row5_col16, #T_15442_row5_col17, #T_15442_row5_col18, #T_15442_row5_col19, #T_15442_row5_col20, #T_15442_row7_col0, #T_15442_row7_col1, #T_15442_row7_col2, #T_15442_row7_col3, #T_15442_row7_col4, #T_15442_row7_col5, #T_15442_row7_col6, #T_15442_row7_col7, #T_15442_row7_col8, #T_15442_row7_col9, #T_15442_row7_col10, #T_15442_row7_col11, #T_15442_row7_col12, #T_15442_row7_col13, #T_15442_row7_col14, #T_15442_row7_col15, #T_15442_row7_col16, #T_15442_row7_col17, #T_15442_row7_col18, #T_15442_row7_col19, #T_15442_row7_col20 {\n",
              "  background-color: #FF8E8F;\n",
              "  color: #5D0E41;\n",
              "  border: 1px double black;\n",
              "}\n",
              "</style>\n",
              "<table id=\"T_15442\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th class=\"blank level0\" >&nbsp;</th>\n",
              "      <th id=\"T_15442_level0_col0\" class=\"col_heading level0 col0\" >PROVINCE</th>\n",
              "      <th id=\"T_15442_level0_col1\" class=\"col_heading level0 col1\" >DIVISION</th>\n",
              "      <th id=\"T_15442_level0_col2\" class=\"col_heading level0 col2\" >DISTRICT</th>\n",
              "      <th id=\"T_15442_level0_col3\" class=\"col_heading level0 col3\" >SUB DIVISION</th>\n",
              "      <th id=\"T_15442_level0_col4\" class=\"col_heading level0 col4\" >AREA (sq.km)</th>\n",
              "      <th id=\"T_15442_level0_col5\" class=\"col_heading level0 col5\" >ALL SEXES (RURAL)</th>\n",
              "      <th id=\"T_15442_level0_col6\" class=\"col_heading level0 col6\" >MALE (RURAL)</th>\n",
              "      <th id=\"T_15442_level0_col7\" class=\"col_heading level0 col7\" >FEMALE (RURAL)</th>\n",
              "      <th id=\"T_15442_level0_col8\" class=\"col_heading level0 col8\" >TRANSGENDER (RURAL)</th>\n",
              "      <th id=\"T_15442_level0_col9\" class=\"col_heading level0 col9\" >SEX RATIO (RURAL)</th>\n",
              "      <th id=\"T_15442_level0_col10\" class=\"col_heading level0 col10\" >AVG HOUSEHOLD SIZE (RURAL)</th>\n",
              "      <th id=\"T_15442_level0_col11\" class=\"col_heading level0 col11\" >POPULATION 1998 (RURAL)</th>\n",
              "      <th id=\"T_15442_level0_col12\" class=\"col_heading level0 col12\" >ANNUAL GROWTH RATE (RURAL)</th>\n",
              "      <th id=\"T_15442_level0_col13\" class=\"col_heading level0 col13\" >ALL SEXES (URBAN)</th>\n",
              "      <th id=\"T_15442_level0_col14\" class=\"col_heading level0 col14\" >MALE (URBAN)</th>\n",
              "      <th id=\"T_15442_level0_col15\" class=\"col_heading level0 col15\" >FEMALE (URBAN)</th>\n",
              "      <th id=\"T_15442_level0_col16\" class=\"col_heading level0 col16\" >TRANSGENDER (URBAN)</th>\n",
              "      <th id=\"T_15442_level0_col17\" class=\"col_heading level0 col17\" >SEX RATIO (URBAN)</th>\n",
              "      <th id=\"T_15442_level0_col18\" class=\"col_heading level0 col18\" >AVG HOUSEHOLD SIZE (URBAN)</th>\n",
              "      <th id=\"T_15442_level0_col19\" class=\"col_heading level0 col19\" >POPULATION 1998 (URBAN)</th>\n",
              "      <th id=\"T_15442_level0_col20\" class=\"col_heading level0 col20\" >ANNUAL GROWTH RATE (URBAN)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th id=\"T_15442_level0_row0\" class=\"row_heading level0 row0\" >0</th>\n",
              "      <td id=\"T_15442_row0_col0\" class=\"data row0 col0\" >PUNJAB</td>\n",
              "      <td id=\"T_15442_row0_col1\" class=\"data row0 col1\" >BAHAWALPUR DIVISION</td>\n",
              "      <td id=\"T_15442_row0_col2\" class=\"data row0 col2\" >BAHAWALNAGAR DISTRICT</td>\n",
              "      <td id=\"T_15442_row0_col3\" class=\"data row0 col3\" >BAHAWALNAGAR TEHSIL</td>\n",
              "      <td id=\"T_15442_row0_col4\" class=\"data row0 col4\" >1729.000000</td>\n",
              "      <td id=\"T_15442_row0_col5\" class=\"data row0 col5\" >619550</td>\n",
              "      <td id=\"T_15442_row0_col6\" class=\"data row0 col6\" >316864</td>\n",
              "      <td id=\"T_15442_row0_col7\" class=\"data row0 col7\" >302644</td>\n",
              "      <td id=\"T_15442_row0_col8\" class=\"data row0 col8\" >42</td>\n",
              "      <td id=\"T_15442_row0_col9\" class=\"data row0 col9\" >104.700000</td>\n",
              "      <td id=\"T_15442_row0_col10\" class=\"data row0 col10\" >6.100000</td>\n",
              "      <td id=\"T_15442_row0_col11\" class=\"data row0 col11\" >407768</td>\n",
              "      <td id=\"T_15442_row0_col12\" class=\"data row0 col12\" >2.220000</td>\n",
              "      <td id=\"T_15442_row0_col13\" class=\"data row0 col13\" >193840</td>\n",
              "      <td id=\"T_15442_row0_col14\" class=\"data row0 col14\" >98391</td>\n",
              "      <td id=\"T_15442_row0_col15\" class=\"data row0 col15\" >95402</td>\n",
              "      <td id=\"T_15442_row0_col16\" class=\"data row0 col16\" >47</td>\n",
              "      <td id=\"T_15442_row0_col17\" class=\"data row0 col17\" >103.130000</td>\n",
              "      <td id=\"T_15442_row0_col18\" class=\"data row0 col18\" >6.020000</td>\n",
              "      <td id=\"T_15442_row0_col19\" class=\"data row0 col19\" >133785</td>\n",
              "      <td id=\"T_15442_row0_col20\" class=\"data row0 col20\" >1.970000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_15442_level0_row1\" class=\"row_heading level0 row1\" >1</th>\n",
              "      <td id=\"T_15442_row1_col0\" class=\"data row1 col0\" >PUNJAB</td>\n",
              "      <td id=\"T_15442_row1_col1\" class=\"data row1 col1\" >BAHAWALPUR DIVISION</td>\n",
              "      <td id=\"T_15442_row1_col2\" class=\"data row1 col2\" >BAHAWALNAGAR DISTRICT</td>\n",
              "      <td id=\"T_15442_row1_col3\" class=\"data row1 col3\" >CHISHTIAN TEHSIL</td>\n",
              "      <td id=\"T_15442_row1_col4\" class=\"data row1 col4\" >1500.000000</td>\n",
              "      <td id=\"T_15442_row1_col5\" class=\"data row1 col5\" >540342</td>\n",
              "      <td id=\"T_15442_row1_col6\" class=\"data row1 col6\" >273788</td>\n",
              "      <td id=\"T_15442_row1_col7\" class=\"data row1 col7\" >266500</td>\n",
              "      <td id=\"T_15442_row1_col8\" class=\"data row1 col8\" >54</td>\n",
              "      <td id=\"T_15442_row1_col9\" class=\"data row1 col9\" >102.730000</td>\n",
              "      <td id=\"T_15442_row1_col10\" class=\"data row1 col10\" >6.150000</td>\n",
              "      <td id=\"T_15442_row1_col11\" class=\"data row1 col11\" >395983</td>\n",
              "      <td id=\"T_15442_row1_col12\" class=\"data row1 col12\" >1.650000</td>\n",
              "      <td id=\"T_15442_row1_col13\" class=\"data row1 col13\" >149424</td>\n",
              "      <td id=\"T_15442_row1_col14\" class=\"data row1 col14\" >75546</td>\n",
              "      <td id=\"T_15442_row1_col15\" class=\"data row1 col15\" >73851</td>\n",
              "      <td id=\"T_15442_row1_col16\" class=\"data row1 col16\" >27</td>\n",
              "      <td id=\"T_15442_row1_col17\" class=\"data row1 col17\" >102.300000</td>\n",
              "      <td id=\"T_15442_row1_col18\" class=\"data row1 col18\" >6.010000</td>\n",
              "      <td id=\"T_15442_row1_col19\" class=\"data row1 col19\" >102287</td>\n",
              "      <td id=\"T_15442_row1_col20\" class=\"data row1 col20\" >2.010000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_15442_level0_row2\" class=\"row_heading level0 row2\" >2</th>\n",
              "      <td id=\"T_15442_row2_col0\" class=\"data row2 col0\" >PUNJAB</td>\n",
              "      <td id=\"T_15442_row2_col1\" class=\"data row2 col1\" >BAHAWALPUR DIVISION</td>\n",
              "      <td id=\"T_15442_row2_col2\" class=\"data row2 col2\" >BAHAWALNAGAR DISTRICT</td>\n",
              "      <td id=\"T_15442_row2_col3\" class=\"data row2 col3\" >FORT ABBAS TEHSIL</td>\n",
              "      <td id=\"T_15442_row2_col4\" class=\"data row2 col4\" >2536.000000</td>\n",
              "      <td id=\"T_15442_row2_col5\" class=\"data row2 col5\" >361240</td>\n",
              "      <td id=\"T_15442_row2_col6\" class=\"data row2 col6\" >182655</td>\n",
              "      <td id=\"T_15442_row2_col7\" class=\"data row2 col7\" >178541</td>\n",
              "      <td id=\"T_15442_row2_col8\" class=\"data row2 col8\" >44</td>\n",
              "      <td id=\"T_15442_row2_col9\" class=\"data row2 col9\" >102.300000</td>\n",
              "      <td id=\"T_15442_row2_col10\" class=\"data row2 col10\" >6.320000</td>\n",
              "      <td id=\"T_15442_row2_col11\" class=\"data row2 col11\" >250959</td>\n",
              "      <td id=\"T_15442_row2_col12\" class=\"data row2 col12\" >1.930000</td>\n",
              "      <td id=\"T_15442_row2_col13\" class=\"data row2 col13\" >61528</td>\n",
              "      <td id=\"T_15442_row2_col14\" class=\"data row2 col14\" >31360</td>\n",
              "      <td id=\"T_15442_row2_col15\" class=\"data row2 col15\" >30150</td>\n",
              "      <td id=\"T_15442_row2_col16\" class=\"data row2 col16\" >18</td>\n",
              "      <td id=\"T_15442_row2_col17\" class=\"data row2 col17\" >104.010000</td>\n",
              "      <td id=\"T_15442_row2_col18\" class=\"data row2 col18\" >6.000000</td>\n",
              "      <td id=\"T_15442_row2_col19\" class=\"data row2 col19\" >34637</td>\n",
              "      <td id=\"T_15442_row2_col20\" class=\"data row2 col20\" >3.060000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_15442_level0_row3\" class=\"row_heading level0 row3\" >3</th>\n",
              "      <td id=\"T_15442_row3_col0\" class=\"data row3 col0\" >PUNJAB</td>\n",
              "      <td id=\"T_15442_row3_col1\" class=\"data row3 col1\" >BAHAWALPUR DIVISION</td>\n",
              "      <td id=\"T_15442_row3_col2\" class=\"data row3 col2\" >BAHAWALNAGAR DISTRICT</td>\n",
              "      <td id=\"T_15442_row3_col3\" class=\"data row3 col3\" >HAROONABAD TEHSIL</td>\n",
              "      <td id=\"T_15442_row3_col4\" class=\"data row3 col4\" >1295.000000</td>\n",
              "      <td id=\"T_15442_row3_col5\" class=\"data row3 col5\" >382115</td>\n",
              "      <td id=\"T_15442_row3_col6\" class=\"data row3 col6\" >192278</td>\n",
              "      <td id=\"T_15442_row3_col7\" class=\"data row3 col7\" >189808</td>\n",
              "      <td id=\"T_15442_row3_col8\" class=\"data row3 col8\" >29</td>\n",
              "      <td id=\"T_15442_row3_col9\" class=\"data row3 col9\" >101.300000</td>\n",
              "      <td id=\"T_15442_row3_col10\" class=\"data row3 col10\" >6.150000</td>\n",
              "      <td id=\"T_15442_row3_col11\" class=\"data row3 col11\" >297343</td>\n",
              "      <td id=\"T_15442_row3_col12\" class=\"data row3 col12\" >1.330000</td>\n",
              "      <td id=\"T_15442_row3_col13\" class=\"data row3 col13\" >142600</td>\n",
              "      <td id=\"T_15442_row3_col14\" class=\"data row3 col14\" >71345</td>\n",
              "      <td id=\"T_15442_row3_col15\" class=\"data row3 col15\" >71236</td>\n",
              "      <td id=\"T_15442_row3_col16\" class=\"data row3 col16\" >19</td>\n",
              "      <td id=\"T_15442_row3_col17\" class=\"data row3 col17\" >100.150000</td>\n",
              "      <td id=\"T_15442_row3_col18\" class=\"data row3 col18\" >6.020000</td>\n",
              "      <td id=\"T_15442_row3_col19\" class=\"data row3 col19\" >84424</td>\n",
              "      <td id=\"T_15442_row3_col20\" class=\"data row3 col20\" >2.790000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_15442_level0_row4\" class=\"row_heading level0 row4\" >4</th>\n",
              "      <td id=\"T_15442_row4_col0\" class=\"data row4 col0\" >PUNJAB</td>\n",
              "      <td id=\"T_15442_row4_col1\" class=\"data row4 col1\" >BAHAWALPUR DIVISION</td>\n",
              "      <td id=\"T_15442_row4_col2\" class=\"data row4 col2\" >BAHAWALNAGAR DISTRICT</td>\n",
              "      <td id=\"T_15442_row4_col3\" class=\"data row4 col3\" >MINCHINABAD TEHSIL</td>\n",
              "      <td id=\"T_15442_row4_col4\" class=\"data row4 col4\" >1818.000000</td>\n",
              "      <td id=\"T_15442_row4_col5\" class=\"data row4 col5\" >452723</td>\n",
              "      <td id=\"T_15442_row4_col6\" class=\"data row4 col6\" >231506</td>\n",
              "      <td id=\"T_15442_row4_col7\" class=\"data row4 col7\" >221178</td>\n",
              "      <td id=\"T_15442_row4_col8\" class=\"data row4 col8\" >39</td>\n",
              "      <td id=\"T_15442_row4_col9\" class=\"data row4 col9\" >104.670000</td>\n",
              "      <td id=\"T_15442_row4_col10\" class=\"data row4 col10\" >6.290000</td>\n",
              "      <td id=\"T_15442_row4_col11\" class=\"data row4 col11\" >316593</td>\n",
              "      <td id=\"T_15442_row4_col12\" class=\"data row4 col12\" >1.900000</td>\n",
              "      <td id=\"T_15442_row4_col13\" class=\"data row4 col13\" >72294</td>\n",
              "      <td id=\"T_15442_row4_col14\" class=\"data row4 col14\" >36694</td>\n",
              "      <td id=\"T_15442_row4_col15\" class=\"data row4 col15\" >35590</td>\n",
              "      <td id=\"T_15442_row4_col16\" class=\"data row4 col16\" >10</td>\n",
              "      <td id=\"T_15442_row4_col17\" class=\"data row4 col17\" >103.100000</td>\n",
              "      <td id=\"T_15442_row4_col18\" class=\"data row4 col18\" >6.340000</td>\n",
              "      <td id=\"T_15442_row4_col19\" class=\"data row4 col19\" >37668</td>\n",
              "      <td id=\"T_15442_row4_col20\" class=\"data row4 col20\" >3.480000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_15442_level0_row5\" class=\"row_heading level0 row5\" >5</th>\n",
              "      <td id=\"T_15442_row5_col0\" class=\"data row5 col0\" >PUNJAB</td>\n",
              "      <td id=\"T_15442_row5_col1\" class=\"data row5 col1\" >BAHAWALPUR DIVISION</td>\n",
              "      <td id=\"T_15442_row5_col2\" class=\"data row5 col2\" >BAHAWALPUR DISTRICT</td>\n",
              "      <td id=\"T_15442_row5_col3\" class=\"data row5 col3\" >AHMADPUR EAST TEHSIL</td>\n",
              "      <td id=\"T_15442_row5_col4\" class=\"data row5 col4\" >1738.000000</td>\n",
              "      <td id=\"T_15442_row5_col5\" class=\"data row5 col5\" >902476</td>\n",
              "      <td id=\"T_15442_row5_col6\" class=\"data row5 col6\" >461525</td>\n",
              "      <td id=\"T_15442_row5_col7\" class=\"data row5 col7\" >440889</td>\n",
              "      <td id=\"T_15442_row5_col8\" class=\"data row5 col8\" >62</td>\n",
              "      <td id=\"T_15442_row5_col9\" class=\"data row5 col9\" >104.680000</td>\n",
              "      <td id=\"T_15442_row5_col10\" class=\"data row5 col10\" >6.530000</td>\n",
              "      <td id=\"T_15442_row5_col11\" class=\"data row5 col11\" >601406</td>\n",
              "      <td id=\"T_15442_row5_col12\" class=\"data row5 col12\" >2.160000</td>\n",
              "      <td id=\"T_15442_row5_col13\" class=\"data row5 col13\" >176110</td>\n",
              "      <td id=\"T_15442_row5_col14\" class=\"data row5 col14\" >90003</td>\n",
              "      <td id=\"T_15442_row5_col15\" class=\"data row5 col15\" >86081</td>\n",
              "      <td id=\"T_15442_row5_col16\" class=\"data row5 col16\" >26</td>\n",
              "      <td id=\"T_15442_row5_col17\" class=\"data row5 col17\" >104.560000</td>\n",
              "      <td id=\"T_15442_row5_col18\" class=\"data row5 col18\" >6.280000</td>\n",
              "      <td id=\"T_15442_row5_col19\" class=\"data row5 col19\" >116891</td>\n",
              "      <td id=\"T_15442_row5_col20\" class=\"data row5 col20\" >2.180000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_15442_level0_row6\" class=\"row_heading level0 row6\" >6</th>\n",
              "      <td id=\"T_15442_row6_col0\" class=\"data row6 col0\" >PUNJAB</td>\n",
              "      <td id=\"T_15442_row6_col1\" class=\"data row6 col1\" >BAHAWALPUR DIVISION</td>\n",
              "      <td id=\"T_15442_row6_col2\" class=\"data row6 col2\" >BAHAWALPUR DISTRICT</td>\n",
              "      <td id=\"T_15442_row6_col3\" class=\"data row6 col3\" >BAHAWALPUR CITY TEHSIL</td>\n",
              "      <td id=\"T_15442_row6_col4\" class=\"data row6 col4\" >1490.000000</td>\n",
              "      <td id=\"T_15442_row6_col5\" class=\"data row6 col5\" >0</td>\n",
              "      <td id=\"T_15442_row6_col6\" class=\"data row6 col6\" >0</td>\n",
              "      <td id=\"T_15442_row6_col7\" class=\"data row6 col7\" >0</td>\n",
              "      <td id=\"T_15442_row6_col8\" class=\"data row6 col8\" >0</td>\n",
              "      <td id=\"T_15442_row6_col9\" class=\"data row6 col9\" >0.000000</td>\n",
              "      <td id=\"T_15442_row6_col10\" class=\"data row6 col10\" >0.000000</td>\n",
              "      <td id=\"T_15442_row6_col11\" class=\"data row6 col11\" >62916</td>\n",
              "      <td id=\"T_15442_row6_col12\" class=\"data row6 col12\" >0.000000</td>\n",
              "      <td id=\"T_15442_row6_col13\" class=\"data row6 col13\" >682116</td>\n",
              "      <td id=\"T_15442_row6_col14\" class=\"data row6 col14\" >350186</td>\n",
              "      <td id=\"T_15442_row6_col15\" class=\"data row6 col15\" >331842</td>\n",
              "      <td id=\"T_15442_row6_col16\" class=\"data row6 col16\" >88</td>\n",
              "      <td id=\"T_15442_row6_col17\" class=\"data row6 col17\" >105.530000</td>\n",
              "      <td id=\"T_15442_row6_col18\" class=\"data row6 col18\" >5.910000</td>\n",
              "      <td id=\"T_15442_row6_col19\" class=\"data row6 col19\" >356626</td>\n",
              "      <td id=\"T_15442_row6_col20\" class=\"data row6 col20\" >3.470000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_15442_level0_row7\" class=\"row_heading level0 row7\" >7</th>\n",
              "      <td id=\"T_15442_row7_col0\" class=\"data row7 col0\" >PUNJAB</td>\n",
              "      <td id=\"T_15442_row7_col1\" class=\"data row7 col1\" >BAHAWALPUR DIVISION</td>\n",
              "      <td id=\"T_15442_row7_col2\" class=\"data row7 col2\" >BAHAWALPUR DISTRICT</td>\n",
              "      <td id=\"T_15442_row7_col3\" class=\"data row7 col3\" >BAHAWALPUR SADDAR TEHSIL</td>\n",
              "      <td id=\"T_15442_row7_col4\" class=\"data row7 col4\" >745.000000</td>\n",
              "      <td id=\"T_15442_row7_col5\" class=\"data row7 col5\" >467938</td>\n",
              "      <td id=\"T_15442_row7_col6\" class=\"data row7 col6\" >239541</td>\n",
              "      <td id=\"T_15442_row7_col7\" class=\"data row7 col7\" >228346</td>\n",
              "      <td id=\"T_15442_row7_col8\" class=\"data row7 col8\" >51</td>\n",
              "      <td id=\"T_15442_row7_col9\" class=\"data row7 col9\" >104.900000</td>\n",
              "      <td id=\"T_15442_row7_col10\" class=\"data row7 col10\" >6.330000</td>\n",
              "      <td id=\"T_15442_row7_col11\" class=\"data row7 col11\" >314428</td>\n",
              "      <td id=\"T_15442_row7_col12\" class=\"data row7 col12\" >2.110000</td>\n",
              "      <td id=\"T_15442_row7_col13\" class=\"data row7 col13\" >107948</td>\n",
              "      <td id=\"T_15442_row7_col14\" class=\"data row7 col14\" >62009</td>\n",
              "      <td id=\"T_15442_row7_col15\" class=\"data row7 col15\" >45927</td>\n",
              "      <td id=\"T_15442_row7_col16\" class=\"data row7 col16\" >12</td>\n",
              "      <td id=\"T_15442_row7_col17\" class=\"data row7 col17\" >135.020000</td>\n",
              "      <td id=\"T_15442_row7_col18\" class=\"data row7 col18\" >5.980000</td>\n",
              "      <td id=\"T_15442_row7_col19\" class=\"data row7 col19\" >72610</td>\n",
              "      <td id=\"T_15442_row7_col20\" class=\"data row7 col20\" >2.110000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n"
            ]
          },
          "metadata": {},
          "execution_count": 42
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# max column printing option\n",
        "pd.set_option('display.max_columns', None)\n",
        "pd.set_option('display.max_rows', None)\n",
        "\n"
      ],
      "metadata": {
        "id": "1GhUMMtonlmQ"
      },
      "execution_count": 43,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#printing Again the dataset\n",
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 365
        },
        "id": "WA5gxgWznpXJ",
        "outputId": "6b20ca8f-2d3e-46ba-cc8d-60fa3cb9846e"
      },
      "execution_count": 44,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  PROVINCE             DIVISION               DISTRICT         SUB DIVISION  \\\n",
              "0   PUNJAB  BAHAWALPUR DIVISION  BAHAWALNAGAR DISTRICT  BAHAWALNAGAR TEHSIL   \n",
              "1   PUNJAB  BAHAWALPUR DIVISION  BAHAWALNAGAR DISTRICT     CHISHTIAN TEHSIL   \n",
              "2   PUNJAB  BAHAWALPUR DIVISION  BAHAWALNAGAR DISTRICT    FORT ABBAS TEHSIL   \n",
              "3   PUNJAB  BAHAWALPUR DIVISION  BAHAWALNAGAR DISTRICT    HAROONABAD TEHSIL   \n",
              "4   PUNJAB  BAHAWALPUR DIVISION  BAHAWALNAGAR DISTRICT   MINCHINABAD TEHSIL   \n",
              "\n",
              "   AREA (sq.km)  ALL SEXES (RURAL)  MALE (RURAL)  FEMALE (RURAL)  \\\n",
              "0        1729.0             619550        316864          302644   \n",
              "1        1500.0             540342        273788          266500   \n",
              "2        2536.0             361240        182655          178541   \n",
              "3        1295.0             382115        192278          189808   \n",
              "4        1818.0             452723        231506          221178   \n",
              "\n",
              "   TRANSGENDER (RURAL)  SEX RATIO (RURAL)  AVG HOUSEHOLD SIZE (RURAL)  \\\n",
              "0                   42             104.70                        6.10   \n",
              "1                   54             102.73                        6.15   \n",
              "2                   44             102.30                        6.32   \n",
              "3                   29             101.30                        6.15   \n",
              "4                   39             104.67                        6.29   \n",
              "\n",
              "   POPULATION 1998 (RURAL)  ANNUAL GROWTH RATE (RURAL)  ALL SEXES (URBAN)  \\\n",
              "0                   407768                        2.22             193840   \n",
              "1                   395983                        1.65             149424   \n",
              "2                   250959                        1.93              61528   \n",
              "3                   297343                        1.33             142600   \n",
              "4                   316593                        1.90              72294   \n",
              "\n",
              "   MALE (URBAN)  FEMALE (URBAN)  TRANSGENDER (URBAN)  SEX RATIO (URBAN)  \\\n",
              "0         98391           95402                   47             103.13   \n",
              "1         75546           73851                   27             102.30   \n",
              "2         31360           30150                   18             104.01   \n",
              "3         71345           71236                   19             100.15   \n",
              "4         36694           35590                   10             103.10   \n",
              "\n",
              "   AVG HOUSEHOLD SIZE (URBAN)  POPULATION 1998 (URBAN)  \\\n",
              "0                        6.02                   133785   \n",
              "1                        6.01                   102287   \n",
              "2                        6.00                    34637   \n",
              "3                        6.02                    84424   \n",
              "4                        6.34                    37668   \n",
              "\n",
              "   ANNUAL GROWTH RATE (URBAN)  \n",
              "0                        1.97  \n",
              "1                        2.01  \n",
              "2                        3.06  \n",
              "3                        2.79  \n",
              "4                        3.48  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f04a66cb-428a-4656-84cb-58505d18474e\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>PROVINCE</th>\n",
              "      <th>DIVISION</th>\n",
              "      <th>DISTRICT</th>\n",
              "      <th>SUB DIVISION</th>\n",
              "      <th>AREA (sq.km)</th>\n",
              "      <th>ALL SEXES (RURAL)</th>\n",
              "      <th>MALE (RURAL)</th>\n",
              "      <th>FEMALE (RURAL)</th>\n",
              "      <th>TRANSGENDER (RURAL)</th>\n",
              "      <th>SEX RATIO (RURAL)</th>\n",
              "      <th>AVG HOUSEHOLD SIZE (RURAL)</th>\n",
              "      <th>POPULATION 1998 (RURAL)</th>\n",
              "      <th>ANNUAL GROWTH RATE (RURAL)</th>\n",
              "      <th>ALL SEXES (URBAN)</th>\n",
              "      <th>MALE (URBAN)</th>\n",
              "      <th>FEMALE (URBAN)</th>\n",
              "      <th>TRANSGENDER (URBAN)</th>\n",
              "      <th>SEX RATIO (URBAN)</th>\n",
              "      <th>AVG HOUSEHOLD SIZE (URBAN)</th>\n",
              "      <th>POPULATION 1998 (URBAN)</th>\n",
              "      <th>ANNUAL GROWTH RATE (URBAN)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>PUNJAB</td>\n",
              "      <td>BAHAWALPUR DIVISION</td>\n",
              "      <td>BAHAWALNAGAR DISTRICT</td>\n",
              "      <td>BAHAWALNAGAR TEHSIL</td>\n",
              "      <td>1729.0</td>\n",
              "      <td>619550</td>\n",
              "      <td>316864</td>\n",
              "      <td>302644</td>\n",
              "      <td>42</td>\n",
              "      <td>104.70</td>\n",
              "      <td>6.10</td>\n",
              "      <td>407768</td>\n",
              "      <td>2.22</td>\n",
              "      <td>193840</td>\n",
              "      <td>98391</td>\n",
              "      <td>95402</td>\n",
              "      <td>47</td>\n",
              "      <td>103.13</td>\n",
              "      <td>6.02</td>\n",
              "      <td>133785</td>\n",
              "      <td>1.97</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>PUNJAB</td>\n",
              "      <td>BAHAWALPUR DIVISION</td>\n",
              "      <td>BAHAWALNAGAR DISTRICT</td>\n",
              "      <td>CHISHTIAN TEHSIL</td>\n",
              "      <td>1500.0</td>\n",
              "      <td>540342</td>\n",
              "      <td>273788</td>\n",
              "      <td>266500</td>\n",
              "      <td>54</td>\n",
              "      <td>102.73</td>\n",
              "      <td>6.15</td>\n",
              "      <td>395983</td>\n",
              "      <td>1.65</td>\n",
              "      <td>149424</td>\n",
              "      <td>75546</td>\n",
              "      <td>73851</td>\n",
              "      <td>27</td>\n",
              "      <td>102.30</td>\n",
              "      <td>6.01</td>\n",
              "      <td>102287</td>\n",
              "      <td>2.01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>PUNJAB</td>\n",
              "      <td>BAHAWALPUR DIVISION</td>\n",
              "      <td>BAHAWALNAGAR DISTRICT</td>\n",
              "      <td>FORT ABBAS TEHSIL</td>\n",
              "      <td>2536.0</td>\n",
              "      <td>361240</td>\n",
              "      <td>182655</td>\n",
              "      <td>178541</td>\n",
              "      <td>44</td>\n",
              "      <td>102.30</td>\n",
              "      <td>6.32</td>\n",
              "      <td>250959</td>\n",
              "      <td>1.93</td>\n",
              "      <td>61528</td>\n",
              "      <td>31360</td>\n",
              "      <td>30150</td>\n",
              "      <td>18</td>\n",
              "      <td>104.01</td>\n",
              "      <td>6.00</td>\n",
              "      <td>34637</td>\n",
              "      <td>3.06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>PUNJAB</td>\n",
              "      <td>BAHAWALPUR DIVISION</td>\n",
              "      <td>BAHAWALNAGAR DISTRICT</td>\n",
              "      <td>HAROONABAD TEHSIL</td>\n",
              "      <td>1295.0</td>\n",
              "      <td>382115</td>\n",
              "      <td>192278</td>\n",
              "      <td>189808</td>\n",
              "      <td>29</td>\n",
              "      <td>101.30</td>\n",
              "      <td>6.15</td>\n",
              "      <td>297343</td>\n",
              "      <td>1.33</td>\n",
              "      <td>142600</td>\n",
              "      <td>71345</td>\n",
              "      <td>71236</td>\n",
              "      <td>19</td>\n",
              "      <td>100.15</td>\n",
              "      <td>6.02</td>\n",
              "      <td>84424</td>\n",
              "      <td>2.79</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>PUNJAB</td>\n",
              "      <td>BAHAWALPUR DIVISION</td>\n",
              "      <td>BAHAWALNAGAR DISTRICT</td>\n",
              "      <td>MINCHINABAD TEHSIL</td>\n",
              "      <td>1818.0</td>\n",
              "      <td>452723</td>\n",
              "      <td>231506</td>\n",
              "      <td>221178</td>\n",
              "      <td>39</td>\n",
              "      <td>104.67</td>\n",
              "      <td>6.29</td>\n",
              "      <td>316593</td>\n",
              "      <td>1.90</td>\n",
              "      <td>72294</td>\n",
              "      <td>36694</td>\n",
              "      <td>35590</td>\n",
              "      <td>10</td>\n",
              "      <td>103.10</td>\n",
              "      <td>6.34</td>\n",
              "      <td>37668</td>\n",
              "      <td>3.48</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f04a66cb-428a-4656-84cb-58505d18474e')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-f04a66cb-428a-4656-84cb-58505d18474e button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-f04a66cb-428a-4656-84cb-58505d18474e');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-3dc2e01d-bfd3-42bc-bd27-9f81395c58e5\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3dc2e01d-bfd3-42bc-bd27-9f81395c58e5')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-3dc2e01d-bfd3-42bc-bd27-9f81395c58e5 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df"
            }
          },
          "metadata": {},
          "execution_count": 44
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.columns"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "_hOBrI6Znu-y",
        "outputId": "c5bf43bf-56be-4685-e2ac-d49784235df7"
      },
      "execution_count": 45,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['PROVINCE', 'DIVISION', 'DISTRICT', 'SUB DIVISION', 'AREA (sq.km)',\n",
              "       'ALL SEXES (RURAL)', 'MALE (RURAL)', 'FEMALE (RURAL)',\n",
              "       'TRANSGENDER (RURAL)', 'SEX RATIO (RURAL)',\n",
              "       'AVG HOUSEHOLD SIZE (RURAL)', 'POPULATION 1998 (RURAL)',\n",
              "       'ANNUAL GROWTH RATE (RURAL)', 'ALL SEXES (URBAN)', 'MALE (URBAN)',\n",
              "       'FEMALE (URBAN)', 'TRANSGENDER (URBAN)', 'SEX RATIO (URBAN)',\n",
              "       'AVG HOUSEHOLD SIZE (URBAN)', 'POPULATION 1998 (URBAN)',\n",
              "       'ANNUAL GROWTH RATE (URBAN)'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {},
          "execution_count": 45
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# lets have a look on data types\n",
        "df.dtypes"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 743
        },
        "id": "qzkR8p1tnyKC",
        "outputId": "bf23dccf-d1b0-442d-c99a-b353f755e50c"
      },
      "execution_count": 46,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "PROVINCE                       object\n",
              "DIVISION                       object\n",
              "DISTRICT                       object\n",
              "SUB DIVISION                   object\n",
              "AREA (sq.km)                  float64\n",
              "ALL SEXES (RURAL)               int64\n",
              "MALE (RURAL)                    int64\n",
              "FEMALE (RURAL)                  int64\n",
              "TRANSGENDER (RURAL)             int64\n",
              "SEX RATIO (RURAL)             float64\n",
              "AVG HOUSEHOLD SIZE (RURAL)    float64\n",
              "POPULATION 1998 (RURAL)         int64\n",
              "ANNUAL GROWTH RATE (RURAL)    float64\n",
              "ALL SEXES (URBAN)               int64\n",
              "MALE (URBAN)                    int64\n",
              "FEMALE (URBAN)                  int64\n",
              "TRANSGENDER (URBAN)             int64\n",
              "SEX RATIO (URBAN)             float64\n",
              "AVG HOUSEHOLD SIZE (URBAN)    float64\n",
              "POPULATION 1998 (URBAN)         int64\n",
              "ANNUAL GROWTH RATE (URBAN)    float64\n",
              "dtype: object"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>PROVINCE</th>\n",
              "      <td>object</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>DIVISION</th>\n",
              "      <td>object</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>DISTRICT</th>\n",
              "      <td>object</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>SUB DIVISION</th>\n",
              "      <td>object</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AREA (sq.km)</th>\n",
              "      <td>float64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ALL SEXES (RURAL)</th>\n",
              "      <td>int64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>MALE (RURAL)</th>\n",
              "      <td>int64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>FEMALE (RURAL)</th>\n",
              "      <td>int64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TRANSGENDER (RURAL)</th>\n",
              "      <td>int64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>SEX RATIO (RURAL)</th>\n",
              "      <td>float64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AVG HOUSEHOLD SIZE (RURAL)</th>\n",
              "      <td>float64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>POPULATION 1998 (RURAL)</th>\n",
              "      <td>int64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ANNUAL GROWTH RATE (RURAL)</th>\n",
              "      <td>float64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ALL SEXES (URBAN)</th>\n",
              "      <td>int64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>MALE (URBAN)</th>\n",
              "      <td>int64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>FEMALE (URBAN)</th>\n",
              "      <td>int64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TRANSGENDER (URBAN)</th>\n",
              "      <td>int64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>SEX RATIO (URBAN)</th>\n",
              "      <td>float64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AVG HOUSEHOLD SIZE (URBAN)</th>\n",
              "      <td>float64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>POPULATION 1998 (URBAN)</th>\n",
              "      <td>int64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ANNUAL GROWTH RATE (URBAN)</th>\n",
              "      <td>float64</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> object</label>"
            ]
          },
          "metadata": {},
          "execution_count": 46
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 372
        },
        "id": "IL1A8F7Lnyb1",
        "outputId": "a0f6d819-51ad-4239-dc09-b72a6db89718"
      },
      "execution_count": 47,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       AREA (sq.km)  ALL SEXES (RURAL)  MALE (RURAL)  FEMALE (RURAL)  \\\n",
              "count    528.000000       5.280000e+02  5.280000e+02    5.280000e+02   \n",
              "mean    1492.005871       2.462780e+05  1.252757e+05    1.209841e+05   \n",
              "std     2039.453778       2.711898e+05  1.375630e+05    1.337169e+05   \n",
              "min        0.000000       0.000000e+00  0.000000e+00    0.000000e+00   \n",
              "25%      425.000000       5.093450e+04  2.712725e+04    2.397900e+04   \n",
              "50%      882.000000       1.652410e+05  8.413450e+04    8.204400e+04   \n",
              "75%     1734.250000       3.129112e+05  1.605022e+05    1.522190e+05   \n",
              "max    18374.000000       2.297375e+06  1.172995e+06    1.124167e+06   \n",
              "\n",
              "       TRANSGENDER (RURAL)  SEX RATIO (RURAL)  AVG HOUSEHOLD SIZE (RURAL)  \\\n",
              "count           528.000000         528.000000                  528.000000   \n",
              "mean             18.174242          98.982614                    6.277064   \n",
              "std              25.522248          26.812660                    2.074947   \n",
              "min               0.000000           0.000000                    0.000000   \n",
              "25%               1.000000         101.105000                    5.700000   \n",
              "50%              10.000000         105.285000                    6.310000   \n",
              "75%              25.000000         108.347500                    7.200000   \n",
              "max             213.000000         139.380000                   12.430000   \n",
              "\n",
              "       POPULATION 1998 (RURAL)  ANNUAL GROWTH RATE (RURAL)  ALL SEXES (URBAN)  \\\n",
              "count             5.280000e+02                  528.000000       5.280000e+02   \n",
              "mean              1.674280e+05                    3.124792       1.408635e+05   \n",
              "std               1.783890e+05                    9.577872       3.512463e+05   \n",
              "min               0.000000e+00                    0.000000       0.000000e+00   \n",
              "25%               3.527350e+04                    1.440000       0.000000e+00   \n",
              "50%               1.172065e+05                    2.030000       4.325450e+04   \n",
              "75%               2.130542e+05                    2.812500       1.178148e+05   \n",
              "max               1.044035e+06                  100.000000       3.653616e+06   \n",
              "\n",
              "       MALE (URBAN)  FEMALE (URBAN)  TRANSGENDER (URBAN)  SEX RATIO (URBAN)  \\\n",
              "count  5.280000e+02    5.280000e+02           528.000000         528.000000   \n",
              "mean   7.284339e+04    6.799787e+04            22.276515          75.411269   \n",
              "std    1.823492e+05    1.688725e+05            66.068127          49.687341   \n",
              "min    0.000000e+00    0.000000e+00             0.000000           0.000000   \n",
              "25%    0.000000e+00    0.000000e+00             0.000000           0.000000   \n",
              "50%    2.198000e+04    2.099900e+04             3.000000         103.195000   \n",
              "75%    6.030175e+04    5.746525e+04            19.000000         107.040000   \n",
              "max    1.905921e+06    1.746900e+06           795.000000         297.810000   \n",
              "\n",
              "       AVG HOUSEHOLD SIZE (URBAN)  POPULATION 1998 (URBAN)  \\\n",
              "count                  528.000000             5.280000e+02   \n",
              "mean                     4.406402             8.014457e+04   \n",
              "std                      2.948336             2.023120e+05   \n",
              "min                      0.000000             0.000000e+00   \n",
              "25%                      0.000000             0.000000e+00   \n",
              "50%                      5.755000             2.129800e+04   \n",
              "75%                      6.340000             6.542225e+04   \n",
              "max                     10.060000             2.075867e+06   \n",
              "\n",
              "       ANNUAL GROWTH RATE (URBAN)  \n",
              "count                  528.000000  \n",
              "mean                     1.920814  \n",
              "std                      2.098908  \n",
              "min                      0.000000  \n",
              "25%                      0.000000  \n",
              "50%                      1.855000  \n",
              "75%                      2.985000  \n",
              "max                     19.780000  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-4cb6d827-9eff-4ade-a903-a62c2cae92f3\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>AREA (sq.km)</th>\n",
              "      <th>ALL SEXES (RURAL)</th>\n",
              "      <th>MALE (RURAL)</th>\n",
              "      <th>FEMALE (RURAL)</th>\n",
              "      <th>TRANSGENDER (RURAL)</th>\n",
              "      <th>SEX RATIO (RURAL)</th>\n",
              "      <th>AVG HOUSEHOLD SIZE (RURAL)</th>\n",
              "      <th>POPULATION 1998 (RURAL)</th>\n",
              "      <th>ANNUAL GROWTH RATE (RURAL)</th>\n",
              "      <th>ALL SEXES (URBAN)</th>\n",
              "      <th>MALE (URBAN)</th>\n",
              "      <th>FEMALE (URBAN)</th>\n",
              "      <th>TRANSGENDER (URBAN)</th>\n",
              "      <th>SEX RATIO (URBAN)</th>\n",
              "      <th>AVG HOUSEHOLD SIZE (URBAN)</th>\n",
              "      <th>POPULATION 1998 (URBAN)</th>\n",
              "      <th>ANNUAL GROWTH RATE (URBAN)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>528.000000</td>\n",
              "      <td>5.280000e+02</td>\n",
              "      <td>5.280000e+02</td>\n",
              "      <td>5.280000e+02</td>\n",
              "      <td>528.000000</td>\n",
              "      <td>528.000000</td>\n",
              "      <td>528.000000</td>\n",
              "      <td>5.280000e+02</td>\n",
              "      <td>528.000000</td>\n",
              "      <td>5.280000e+02</td>\n",
              "      <td>5.280000e+02</td>\n",
              "      <td>5.280000e+02</td>\n",
              "      <td>528.000000</td>\n",
              "      <td>528.000000</td>\n",
              "      <td>528.000000</td>\n",
              "      <td>5.280000e+02</td>\n",
              "      <td>528.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>1492.005871</td>\n",
              "      <td>2.462780e+05</td>\n",
              "      <td>1.252757e+05</td>\n",
              "      <td>1.209841e+05</td>\n",
              "      <td>18.174242</td>\n",
              "      <td>98.982614</td>\n",
              "      <td>6.277064</td>\n",
              "      <td>1.674280e+05</td>\n",
              "      <td>3.124792</td>\n",
              "      <td>1.408635e+05</td>\n",
              "      <td>7.284339e+04</td>\n",
              "      <td>6.799787e+04</td>\n",
              "      <td>22.276515</td>\n",
              "      <td>75.411269</td>\n",
              "      <td>4.406402</td>\n",
              "      <td>8.014457e+04</td>\n",
              "      <td>1.920814</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>2039.453778</td>\n",
              "      <td>2.711898e+05</td>\n",
              "      <td>1.375630e+05</td>\n",
              "      <td>1.337169e+05</td>\n",
              "      <td>25.522248</td>\n",
              "      <td>26.812660</td>\n",
              "      <td>2.074947</td>\n",
              "      <td>1.783890e+05</td>\n",
              "      <td>9.577872</td>\n",
              "      <td>3.512463e+05</td>\n",
              "      <td>1.823492e+05</td>\n",
              "      <td>1.688725e+05</td>\n",
              "      <td>66.068127</td>\n",
              "      <td>49.687341</td>\n",
              "      <td>2.948336</td>\n",
              "      <td>2.023120e+05</td>\n",
              "      <td>2.098908</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>425.000000</td>\n",
              "      <td>5.093450e+04</td>\n",
              "      <td>2.712725e+04</td>\n",
              "      <td>2.397900e+04</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>101.105000</td>\n",
              "      <td>5.700000</td>\n",
              "      <td>3.527350e+04</td>\n",
              "      <td>1.440000</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>882.000000</td>\n",
              "      <td>1.652410e+05</td>\n",
              "      <td>8.413450e+04</td>\n",
              "      <td>8.204400e+04</td>\n",
              "      <td>10.000000</td>\n",
              "      <td>105.285000</td>\n",
              "      <td>6.310000</td>\n",
              "      <td>1.172065e+05</td>\n",
              "      <td>2.030000</td>\n",
              "      <td>4.325450e+04</td>\n",
              "      <td>2.198000e+04</td>\n",
              "      <td>2.099900e+04</td>\n",
              "      <td>3.000000</td>\n",
              "      <td>103.195000</td>\n",
              "      <td>5.755000</td>\n",
              "      <td>2.129800e+04</td>\n",
              "      <td>1.855000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>1734.250000</td>\n",
              "      <td>3.129112e+05</td>\n",
              "      <td>1.605022e+05</td>\n",
              "      <td>1.522190e+05</td>\n",
              "      <td>25.000000</td>\n",
              "      <td>108.347500</td>\n",
              "      <td>7.200000</td>\n",
              "      <td>2.130542e+05</td>\n",
              "      <td>2.812500</td>\n",
              "      <td>1.178148e+05</td>\n",
              "      <td>6.030175e+04</td>\n",
              "      <td>5.746525e+04</td>\n",
              "      <td>19.000000</td>\n",
              "      <td>107.040000</td>\n",
              "      <td>6.340000</td>\n",
              "      <td>6.542225e+04</td>\n",
              "      <td>2.985000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>18374.000000</td>\n",
              "      <td>2.297375e+06</td>\n",
              "      <td>1.172995e+06</td>\n",
              "      <td>1.124167e+06</td>\n",
              "      <td>213.000000</td>\n",
              "      <td>139.380000</td>\n",
              "      <td>12.430000</td>\n",
              "      <td>1.044035e+06</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>3.653616e+06</td>\n",
              "      <td>1.905921e+06</td>\n",
              "      <td>1.746900e+06</td>\n",
              "      <td>795.000000</td>\n",
              "      <td>297.810000</td>\n",
              "      <td>10.060000</td>\n",
              "      <td>2.075867e+06</td>\n",
              "      <td>19.780000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4cb6d827-9eff-4ade-a903-a62c2cae92f3')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-4cb6d827-9eff-4ade-a903-a62c2cae92f3 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-4cb6d827-9eff-4ade-a903-a62c2cae92f3');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-4893b393-23c9-4a2b-b449-7004baa7a00d\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4893b393-23c9-4a2b-b449-7004baa7a00d')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-4893b393-23c9-4a2b-b449-7004baa7a00d button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"AREA (sq.km)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6177.310803374259,\n        \"min\": 0.0,\n        \"max\": 18374.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          1492.005871212121,\n          882.0,\n          528.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ALL SEXES (RURAL)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 769208.0106305804,\n        \"min\": 0.0,\n        \"max\": 2297375.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          246278.01136363635,\n          165241.0,\n          528.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MALE (RURAL)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 392682.882943489,\n        \"min\": 0.0,\n        \"max\": 1172995.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          125275.6875,\n          84134.5,\n          528.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FEMALE (RURAL)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 376357.2833970739,\n        \"min\": 0.0,\n        \"max\": 1124167.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          120984.14962121213,\n          82044.0,\n          528.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TRANSGENDER (RURAL)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 185.80629201250719,\n        \"min\": 0.0,\n        \"max\": 528.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          18.174242424242426,\n          10.0,\n          528.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEX RATIO (RURAL)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 164.02950723425047,\n        \"min\": 0.0,\n        \"max\": 528.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          98.98261363636364,\n          105.285,\n          528.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AVG HOUSEHOLD SIZE (RURAL)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 184.69259879063594,\n        \"min\": 0.0,\n        \"max\": 528.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          6.277064393939394,\n          6.31,\n          528.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"POPULATION 1998 (RURAL)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 343268.6314192812,\n        \"min\": 0.0,\n        \"max\": 1044035.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          167427.99431818182,\n          117206.5,\n          528.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ANNUAL GROWTH RATE (RURAL)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 183.83839152868273,\n        \"min\": 0.0,\n        \"max\": 528.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          3.1247916666666664,\n          2.03,\n          528.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ALL SEXES (URBAN)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1264275.5640689617,\n        \"min\": 0.0,\n        \"max\": 3653616.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          528.0,\n          140863.5284090909,\n          117814.75\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MALE (URBAN)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 659633.3340358741,\n        \"min\": 0.0,\n        \"max\": 1905921.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          528.0,\n          72843.38636363637,\n          60301.75\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FEMALE (URBAN)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 604349.8308916766,\n        \"min\": 0.0,\n        \"max\": 1746900.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          528.0,\n          67997.86553030302,\n          57465.25\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TRANSGENDER (URBAN)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 306.88076620055256,\n        \"min\": 0.0,\n        \"max\": 795.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          528.0,\n          22.276515151515152,\n          19.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEX RATIO (URBAN)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 180.95202470398652,\n        \"min\": 0.0,\n        \"max\": 528.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          528.0,\n          75.41126893939395,\n          107.04\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AVG HOUSEHOLD SIZE (URBAN)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 185.21589328550746,\n        \"min\": 0.0,\n        \"max\": 528.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          528.0,\n          4.406401515151515,\n          6.34\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"POPULATION 1998 (URBAN)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 718501.2536392579,\n        \"min\": 0.0,\n        \"max\": 2075867.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          528.0,\n          80144.56628787878,\n          65422.25\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ANNUAL GROWTH RATE (URBAN)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 185.3432036655135,\n        \"min\": 0.0,\n        \"max\": 528.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          528.0,\n          1.920814393939394,\n          2.985\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 47
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.describe().transpose()\n",
        "# or\n",
        "# df.describe().T"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 687
        },
        "id": "GEa7A879n7cD",
        "outputId": "a582099b-b0a0-45ae-9dce-164f2a26e6f3"
      },
      "execution_count": 48,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                            count           mean            std  min  \\\n",
              "AREA (sq.km)                528.0    1492.005871    2039.453778  0.0   \n",
              "ALL SEXES (RURAL)           528.0  246278.011364  271189.816559  0.0   \n",
              "MALE (RURAL)                528.0  125275.687500  137563.021458  0.0   \n",
              "FEMALE (RURAL)              528.0  120984.149621  133716.898296  0.0   \n",
              "TRANSGENDER (RURAL)         528.0      18.174242      25.522248  0.0   \n",
              "SEX RATIO (RURAL)           528.0      98.982614      26.812660  0.0   \n",
              "AVG HOUSEHOLD SIZE (RURAL)  528.0       6.277064       2.074947  0.0   \n",
              "POPULATION 1998 (RURAL)     528.0  167427.994318  178388.976993  0.0   \n",
              "ANNUAL GROWTH RATE (RURAL)  528.0       3.124792       9.577872  0.0   \n",
              "ALL SEXES (URBAN)           528.0  140863.528409  351246.279136  0.0   \n",
              "MALE (URBAN)                528.0   72843.386364  182349.241379  0.0   \n",
              "FEMALE (URBAN)              528.0   67997.865530  168872.528212  0.0   \n",
              "TRANSGENDER (URBAN)         528.0      22.276515      66.068127  0.0   \n",
              "SEX RATIO (URBAN)           528.0      75.411269      49.687341  0.0   \n",
              "AVG HOUSEHOLD SIZE (URBAN)  528.0       4.406402       2.948336  0.0   \n",
              "POPULATION 1998 (URBAN)     528.0   80144.566288  202312.019227  0.0   \n",
              "ANNUAL GROWTH RATE (URBAN)  528.0       1.920814       2.098908  0.0   \n",
              "\n",
              "                                  25%         50%          75%         max  \n",
              "AREA (sq.km)                  425.000     882.000    1734.2500    18374.00  \n",
              "ALL SEXES (RURAL)           50934.500  165241.000  312911.2500  2297375.00  \n",
              "MALE (RURAL)                27127.250   84134.500  160502.2500  1172995.00  \n",
              "FEMALE (RURAL)              23979.000   82044.000  152219.0000  1124167.00  \n",
              "TRANSGENDER (RURAL)             1.000      10.000      25.0000      213.00  \n",
              "SEX RATIO (RURAL)             101.105     105.285     108.3475      139.38  \n",
              "AVG HOUSEHOLD SIZE (RURAL)      5.700       6.310       7.2000       12.43  \n",
              "POPULATION 1998 (RURAL)     35273.500  117206.500  213054.2500  1044035.00  \n",
              "ANNUAL GROWTH RATE (RURAL)      1.440       2.030       2.8125      100.00  \n",
              "ALL SEXES (URBAN)               0.000   43254.500  117814.7500  3653616.00  \n",
              "MALE (URBAN)                    0.000   21980.000   60301.7500  1905921.00  \n",
              "FEMALE (URBAN)                  0.000   20999.000   57465.2500  1746900.00  \n",
              "TRANSGENDER (URBAN)             0.000       3.000      19.0000      795.00  \n",
              "SEX RATIO (URBAN)               0.000     103.195     107.0400      297.81  \n",
              "AVG HOUSEHOLD SIZE (URBAN)      0.000       5.755       6.3400       10.06  \n",
              "POPULATION 1998 (URBAN)         0.000   21298.000   65422.2500  2075867.00  \n",
              "ANNUAL GROWTH RATE (URBAN)      0.000       1.855       2.9850       19.78  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0c6ab9d8-5583-4836-81f5-b654d8eb6a70\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>count</th>\n",
              "      <th>mean</th>\n",
              "      <th>std</th>\n",
              "      <th>min</th>\n",
              "      <th>25%</th>\n",
              "      <th>50%</th>\n",
              "      <th>75%</th>\n",
              "      <th>max</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>AREA (sq.km)</th>\n",
              "      <td>528.0</td>\n",
              "      <td>1492.005871</td>\n",
              "      <td>2039.453778</td>\n",
              "      <td>0.0</td>\n",
              "      <td>425.000</td>\n",
              "      <td>882.000</td>\n",
              "      <td>1734.2500</td>\n",
              "      <td>18374.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ALL SEXES (RURAL)</th>\n",
              "      <td>528.0</td>\n",
              "      <td>246278.011364</td>\n",
              "      <td>271189.816559</td>\n",
              "      <td>0.0</td>\n",
              "      <td>50934.500</td>\n",
              "      <td>165241.000</td>\n",
              "      <td>312911.2500</td>\n",
              "      <td>2297375.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>MALE (RURAL)</th>\n",
              "      <td>528.0</td>\n",
              "      <td>125275.687500</td>\n",
              "      <td>137563.021458</td>\n",
              "      <td>0.0</td>\n",
              "      <td>27127.250</td>\n",
              "      <td>84134.500</td>\n",
              "      <td>160502.2500</td>\n",
              "      <td>1172995.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>FEMALE (RURAL)</th>\n",
              "      <td>528.0</td>\n",
              "      <td>120984.149621</td>\n",
              "      <td>133716.898296</td>\n",
              "      <td>0.0</td>\n",
              "      <td>23979.000</td>\n",
              "      <td>82044.000</td>\n",
              "      <td>152219.0000</td>\n",
              "      <td>1124167.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TRANSGENDER (RURAL)</th>\n",
              "      <td>528.0</td>\n",
              "      <td>18.174242</td>\n",
              "      <td>25.522248</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.000</td>\n",
              "      <td>10.000</td>\n",
              "      <td>25.0000</td>\n",
              "      <td>213.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>SEX RATIO (RURAL)</th>\n",
              "      <td>528.0</td>\n",
              "      <td>98.982614</td>\n",
              "      <td>26.812660</td>\n",
              "      <td>0.0</td>\n",
              "      <td>101.105</td>\n",
              "      <td>105.285</td>\n",
              "      <td>108.3475</td>\n",
              "      <td>139.38</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AVG HOUSEHOLD SIZE (RURAL)</th>\n",
              "      <td>528.0</td>\n",
              "      <td>6.277064</td>\n",
              "      <td>2.074947</td>\n",
              "      <td>0.0</td>\n",
              "      <td>5.700</td>\n",
              "      <td>6.310</td>\n",
              "      <td>7.2000</td>\n",
              "      <td>12.43</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>POPULATION 1998 (RURAL)</th>\n",
              "      <td>528.0</td>\n",
              "      <td>167427.994318</td>\n",
              "      <td>178388.976993</td>\n",
              "      <td>0.0</td>\n",
              "      <td>35273.500</td>\n",
              "      <td>117206.500</td>\n",
              "      <td>213054.2500</td>\n",
              "      <td>1044035.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ANNUAL GROWTH RATE (RURAL)</th>\n",
              "      <td>528.0</td>\n",
              "      <td>3.124792</td>\n",
              "      <td>9.577872</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.440</td>\n",
              "      <td>2.030</td>\n",
              "      <td>2.8125</td>\n",
              "      <td>100.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ALL SEXES (URBAN)</th>\n",
              "      <td>528.0</td>\n",
              "      <td>140863.528409</td>\n",
              "      <td>351246.279136</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.000</td>\n",
              "      <td>43254.500</td>\n",
              "      <td>117814.7500</td>\n",
              "      <td>3653616.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>MALE (URBAN)</th>\n",
              "      <td>528.0</td>\n",
              "      <td>72843.386364</td>\n",
              "      <td>182349.241379</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.000</td>\n",
              "      <td>21980.000</td>\n",
              "      <td>60301.7500</td>\n",
              "      <td>1905921.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>FEMALE (URBAN)</th>\n",
              "      <td>528.0</td>\n",
              "      <td>67997.865530</td>\n",
              "      <td>168872.528212</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.000</td>\n",
              "      <td>20999.000</td>\n",
              "      <td>57465.2500</td>\n",
              "      <td>1746900.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TRANSGENDER (URBAN)</th>\n",
              "      <td>528.0</td>\n",
              "      <td>22.276515</td>\n",
              "      <td>66.068127</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.000</td>\n",
              "      <td>3.000</td>\n",
              "      <td>19.0000</td>\n",
              "      <td>795.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>SEX RATIO (URBAN)</th>\n",
              "      <td>528.0</td>\n",
              "      <td>75.411269</td>\n",
              "      <td>49.687341</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.000</td>\n",
              "      <td>103.195</td>\n",
              "      <td>107.0400</td>\n",
              "      <td>297.81</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AVG HOUSEHOLD SIZE (URBAN)</th>\n",
              "      <td>528.0</td>\n",
              "      <td>4.406402</td>\n",
              "      <td>2.948336</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.000</td>\n",
              "      <td>5.755</td>\n",
              "      <td>6.3400</td>\n",
              "      <td>10.06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>POPULATION 1998 (URBAN)</th>\n",
              "      <td>528.0</td>\n",
              "      <td>80144.566288</td>\n",
              "      <td>202312.019227</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.000</td>\n",
              "      <td>21298.000</td>\n",
              "      <td>65422.2500</td>\n",
              "      <td>2075867.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ANNUAL GROWTH RATE (URBAN)</th>\n",
              "      <td>528.0</td>\n",
              "      <td>1.920814</td>\n",
              "      <td>2.098908</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.000</td>\n",
              "      <td>1.855</td>\n",
              "      <td>2.9850</td>\n",
              "      <td>19.78</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0c6ab9d8-5583-4836-81f5-b654d8eb6a70')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-0c6ab9d8-5583-4836-81f5-b654d8eb6a70 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-0c6ab9d8-5583-4836-81f5-b654d8eb6a70');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-0299b9d3-0a06-4f53-85f1-12e315988ff4\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0299b9d3-0a06-4f53-85f1-12e315988ff4')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-0299b9d3-0a06-4f53-85f1-12e315988ff4 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"# df\",\n  \"rows\": 17,\n  \"fields\": [\n    {\n      \"column\": \"count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 528.0,\n        \"max\": 528.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          528.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 76480.66841493991,\n        \"min\": 1.920814393939394,\n        \"max\": 246278.01136363635,\n        \"num_unique_values\": 17,\n        \"samples\": [\n          1492.005871212121\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"std\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 115208.79846009355,\n        \"min\": 2.0749468568721596,\n        \"max\": 351246.2791356469,\n        \"num_unique_values\": 17,\n        \"samples\": [\n          2039.453778210461\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"min\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 0.0,\n        \"max\": 0.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"25%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15874.187366490803,\n        \"min\": 0.0,\n        \"max\": 50934.5,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          1.44\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"50%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 49895.594635653346,\n        \"min\": 1.855,\n        \"max\": 165241.0,\n        \"num_unique_values\": 17,\n        \"samples\": [\n          882.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"75%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 93762.80076475472,\n        \"min\": 2.8125,\n        \"max\": 312911.25,\n        \"num_unique_values\": 17,\n        \"samples\": [\n          1734.25\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"max\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1119230.145785614,\n        \"min\": 10.06,\n        \"max\": 3653616.0,\n        \"num_unique_values\": 17,\n        \"samples\": [\n          18374.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 48
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# How many are the missing values\n",
        "df.isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 743
        },
        "id": "vZQCsA07oC9Z",
        "outputId": "11978956-b9ae-41c5-a822-6d546e8853dc"
      },
      "execution_count": 49,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "PROVINCE                      0\n",
              "DIVISION                      0\n",
              "DISTRICT                      0\n",
              "SUB DIVISION                  0\n",
              "AREA (sq.km)                  0\n",
              "ALL SEXES (RURAL)             0\n",
              "MALE (RURAL)                  0\n",
              "FEMALE (RURAL)                0\n",
              "TRANSGENDER (RURAL)           0\n",
              "SEX RATIO (RURAL)             0\n",
              "AVG HOUSEHOLD SIZE (RURAL)    0\n",
              "POPULATION 1998 (RURAL)       0\n",
              "ANNUAL GROWTH RATE (RURAL)    0\n",
              "ALL SEXES (URBAN)             0\n",
              "MALE (URBAN)                  0\n",
              "FEMALE (URBAN)                0\n",
              "TRANSGENDER (URBAN)           0\n",
              "SEX RATIO (URBAN)             0\n",
              "AVG HOUSEHOLD SIZE (URBAN)    0\n",
              "POPULATION 1998 (URBAN)       0\n",
              "ANNUAL GROWTH RATE (URBAN)    0\n",
              "dtype: int64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>PROVINCE</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>DIVISION</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>DISTRICT</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>SUB DIVISION</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AREA (sq.km)</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ALL SEXES (RURAL)</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>MALE (RURAL)</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>FEMALE (RURAL)</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TRANSGENDER (RURAL)</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>SEX RATIO (RURAL)</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AVG HOUSEHOLD SIZE (RURAL)</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>POPULATION 1998 (RURAL)</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ANNUAL GROWTH RATE (RURAL)</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ALL SEXES (URBAN)</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>MALE (URBAN)</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>FEMALE (URBAN)</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TRANSGENDER (URBAN)</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>SEX RATIO (URBAN)</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AVG HOUSEHOLD SIZE (URBAN)</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>POPULATION 1998 (URBAN)</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ANNUAL GROWTH RATE (URBAN)</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> int64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 49
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.columns"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "V3EmRZMOoDHe",
        "outputId": "568ba82b-11a6-46b7-aeba-8f34db9a61f3"
      },
      "execution_count": 50,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['PROVINCE', 'DIVISION', 'DISTRICT', 'SUB DIVISION', 'AREA (sq.km)',\n",
              "       'ALL SEXES (RURAL)', 'MALE (RURAL)', 'FEMALE (RURAL)',\n",
              "       'TRANSGENDER (RURAL)', 'SEX RATIO (RURAL)',\n",
              "       'AVG HOUSEHOLD SIZE (RURAL)', 'POPULATION 1998 (RURAL)',\n",
              "       'ANNUAL GROWTH RATE (RURAL)', 'ALL SEXES (URBAN)', 'MALE (URBAN)',\n",
              "       'FEMALE (URBAN)', 'TRANSGENDER (URBAN)', 'SEX RATIO (URBAN)',\n",
              "       'AVG HOUSEHOLD SIZE (URBAN)', 'POPULATION 1998 (URBAN)',\n",
              "       'ANNUAL GROWTH RATE (URBAN)'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {},
          "execution_count": 50
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#To plot some selected features\n",
        "#Setting up colors prefrences\n",
        "sns.set(rc={\"axes.facecolor\":\"#FFF9ED\",\"figure.facecolor\":\"#FFF9ED\"})\n",
        "pallet = [\"#682F2F\", \"#9E726F\", \"#D6B2B1\", \"#B9C0C9\", \"#9F8A78\", \"#F3AB60\"]\n",
        "cmap = colors.ListedColormap([\"#682F2F\", \"#9E726F\", \"#D6B2B1\", \"#B9C0C9\", \"#9F8A78\", \"#F3AB60\"])\n",
        "#Plotting following features\n",
        "To_Plot = [\"AREA (sq.km)\"]\n",
        "\n",
        "plt.figure()\n",
        "plt.figure(figsize=(5, 5))\n",
        "sns.boxplot(df[To_Plot],palette= ([\"#682F2F\",\"#F3AB60\"]))\n",
        "\n",
        "#Taking hue\n",
        "plt.show()\n",
        "\n",
        "# Using boxplot\n",
        "# sns.boxplot(df, x='AREA (sq.km)')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 522
        },
        "id": "-3dQP0AaoDKJ",
        "outputId": "997c4a1c-72d8-442f-e970-070f939f3a2e"
      },
      "execution_count": 51,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-51-4640d3a6ee43>:11: UserWarning: The palette list has more values (2) than needed (1), which may not be intended.\n",
            "  sns.boxplot(df[To_Plot],palette= ([\"#682F2F\",\"#F3AB60\"]))\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 0 Axes>"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 500x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# we can change the axis to y axis\n",
        "plt.figure(figsize=(5, 5))\n",
        "sns.boxplot(df, x='AREA (sq.km)')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 490
        },
        "id": "DnEPt76coDOU",
        "outputId": "ae6c40f6-9066-4cfb-d299-609e5c671b43"
      },
      "execution_count": 52,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: xlabel='AREA (sq.km)'>"
            ]
          },
          "metadata": {},
          "execution_count": 52
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 500x500 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "sns.set(rc={\"axes.facecolor\":\"#FFF9ED\",\"figure.facecolor\":\"#FFF9ED\"})\n",
        "pallet = [\"#682F2F\", \"#9E726F\", \"#D6B2B1\", \"#B9C0C9\", \"#9F8A78\", \"#F3AB60\"]\n",
        "cmap = colors.ListedColormap([\"#682F2F\", \"#9E726F\", \"#D6B2B1\", \"#B9C0C9\", \"#9F8A78\", \"#F3AB60\"])\n",
        "\n",
        "plt.figure()\n",
        "plt.figure(figsize=(15, 8))\n",
        "sns.boxplot(df, y='AREA (sq.km)' , x='PROVINCE',hue='PROVINCE',palette= ([\"#682F2F\",\"#F3AB60\"]))\n",
        "\n",
        "#Taking hue\n",
        "plt.show()\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 580
        },
        "id": "EsTgHZsFoDRY",
        "outputId": "8c9b73ee-fbc8-4a29-f19b-ed0c19c5b587"
      },
      "execution_count": 53,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-53-1756282e436a>:7: UserWarning: \n",
            "The palette list has fewer values (2) than needed (5) and will cycle, which may produce an uninterpretable plot.\n",
            "  sns.boxplot(df, y='AREA (sq.km)' , x='PROVINCE',hue='PROVINCE',palette= ([\"#682F2F\",\"#F3AB60\"]))\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 0 Axes>"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1500x800 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(df['AREA (sq.km)'].max())\n",
        "# now storing this in a variable for further analysis\n",
        "maximumArea = df['AREA (sq.km)'].max()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "IwrplePXoZJL",
        "outputId": "de0e19f6-c38f-4c69-c603-e25dcae225e8"
      },
      "execution_count": 54,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "18374.0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"Maximum area is: \", maximumArea)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5qGS4F-LoZNQ",
        "outputId": "5ed101b6-c4ef-4e0b-da4e-4171aec3c64d"
      },
      "execution_count": 55,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Maximum area is:  18374.0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "max_Province= df[['PROVINCE','DIVISION','DISTRICT','SUB DIVISION','AREA (sq.km)']].max()\n",
        "print(max_Province)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "vfzO1oDMoZQy",
        "outputId": "5e3ec938-a5c1-41ba-aa17-0f71344b927b"
      },
      "execution_count": 56,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "PROVINCE                  SINDH\n",
            "DIVISION          Zhob Division\n",
            "DISTRICT        ZIARAT DISTRICT\n",
            "SUB DIVISION      ZIARAT TEHSIL\n",
            "AREA (sq.km)            18374.0\n",
            "dtype: object\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print('Which District has the maximum Area ?')\n",
        "print('The District which has maximum Area is PUNJAB')\n",
        "\n",
        "print('----------------------------------------------------')\n",
        "print('Which Province has the maximum Area ?')\n",
        "print('The Province that has the maximum Area is: SINDH')\n",
        "\n",
        "print('----------------------------------------------------')\n",
        "print('What are the maximum Area ?')\n",
        "print('The maximum Area is: ', maximumArea)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "rVIg6RCvokEh",
        "outputId": "0f6630b4-aeb3-4d33-ae24-5dac32929041"
      },
      "execution_count": 57,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Which District has the maximum Area ?\n",
            "The District which has maximum Area is PUNJAB\n",
            "----------------------------------------------------\n",
            "Which Province has the maximum Area ?\n",
            "The Province that has the maximum Area is: SINDH\n",
            "----------------------------------------------------\n",
            "What are the maximum Area ?\n",
            "The maximum Area is:  18374.0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.columns"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "h16tv0WTokOE",
        "outputId": "b8d102ca-9283-4c16-adb4-0002c00f1d2a"
      },
      "execution_count": 58,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['PROVINCE', 'DIVISION', 'DISTRICT', 'SUB DIVISION', 'AREA (sq.km)',\n",
              "       'ALL SEXES (RURAL)', 'MALE (RURAL)', 'FEMALE (RURAL)',\n",
              "       'TRANSGENDER (RURAL)', 'SEX RATIO (RURAL)',\n",
              "       'AVG HOUSEHOLD SIZE (RURAL)', 'POPULATION 1998 (RURAL)',\n",
              "       'ANNUAL GROWTH RATE (RURAL)', 'ALL SEXES (URBAN)', 'MALE (URBAN)',\n",
              "       'FEMALE (URBAN)', 'TRANSGENDER (URBAN)', 'SEX RATIO (URBAN)',\n",
              "       'AVG HOUSEHOLD SIZE (URBAN)', 'POPULATION 1998 (URBAN)',\n",
              "       'ANNUAL GROWTH RATE (URBAN)'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {},
          "execution_count": 58
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.describe().T"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 687
        },
        "id": "7ZlEjblyokS4",
        "outputId": "5d8bdaa1-2e97-4478-b792-f0edf8020000"
      },
      "execution_count": 59,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                            count           mean            std  min  \\\n",
              "AREA (sq.km)                528.0    1492.005871    2039.453778  0.0   \n",
              "ALL SEXES (RURAL)           528.0  246278.011364  271189.816559  0.0   \n",
              "MALE (RURAL)                528.0  125275.687500  137563.021458  0.0   \n",
              "FEMALE (RURAL)              528.0  120984.149621  133716.898296  0.0   \n",
              "TRANSGENDER (RURAL)         528.0      18.174242      25.522248  0.0   \n",
              "SEX RATIO (RURAL)           528.0      98.982614      26.812660  0.0   \n",
              "AVG HOUSEHOLD SIZE (RURAL)  528.0       6.277064       2.074947  0.0   \n",
              "POPULATION 1998 (RURAL)     528.0  167427.994318  178388.976993  0.0   \n",
              "ANNUAL GROWTH RATE (RURAL)  528.0       3.124792       9.577872  0.0   \n",
              "ALL SEXES (URBAN)           528.0  140863.528409  351246.279136  0.0   \n",
              "MALE (URBAN)                528.0   72843.386364  182349.241379  0.0   \n",
              "FEMALE (URBAN)              528.0   67997.865530  168872.528212  0.0   \n",
              "TRANSGENDER (URBAN)         528.0      22.276515      66.068127  0.0   \n",
              "SEX RATIO (URBAN)           528.0      75.411269      49.687341  0.0   \n",
              "AVG HOUSEHOLD SIZE (URBAN)  528.0       4.406402       2.948336  0.0   \n",
              "POPULATION 1998 (URBAN)     528.0   80144.566288  202312.019227  0.0   \n",
              "ANNUAL GROWTH RATE (URBAN)  528.0       1.920814       2.098908  0.0   \n",
              "\n",
              "                                  25%         50%          75%         max  \n",
              "AREA (sq.km)                  425.000     882.000    1734.2500    18374.00  \n",
              "ALL SEXES (RURAL)           50934.500  165241.000  312911.2500  2297375.00  \n",
              "MALE (RURAL)                27127.250   84134.500  160502.2500  1172995.00  \n",
              "FEMALE (RURAL)              23979.000   82044.000  152219.0000  1124167.00  \n",
              "TRANSGENDER (RURAL)             1.000      10.000      25.0000      213.00  \n",
              "SEX RATIO (RURAL)             101.105     105.285     108.3475      139.38  \n",
              "AVG HOUSEHOLD SIZE (RURAL)      5.700       6.310       7.2000       12.43  \n",
              "POPULATION 1998 (RURAL)     35273.500  117206.500  213054.2500  1044035.00  \n",
              "ANNUAL GROWTH RATE (RURAL)      1.440       2.030       2.8125      100.00  \n",
              "ALL SEXES (URBAN)               0.000   43254.500  117814.7500  3653616.00  \n",
              "MALE (URBAN)                    0.000   21980.000   60301.7500  1905921.00  \n",
              "FEMALE (URBAN)                  0.000   20999.000   57465.2500  1746900.00  \n",
              "TRANSGENDER (URBAN)             0.000       3.000      19.0000      795.00  \n",
              "SEX RATIO (URBAN)               0.000     103.195     107.0400      297.81  \n",
              "AVG HOUSEHOLD SIZE (URBAN)      0.000       5.755       6.3400       10.06  \n",
              "POPULATION 1998 (URBAN)         0.000   21298.000   65422.2500  2075867.00  \n",
              "ANNUAL GROWTH RATE (URBAN)      0.000       1.855       2.9850       19.78  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ca72f292-c9ee-4895-b241-5a2908cc119e\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>count</th>\n",
              "      <th>mean</th>\n",
              "      <th>std</th>\n",
              "      <th>min</th>\n",
              "      <th>25%</th>\n",
              "      <th>50%</th>\n",
              "      <th>75%</th>\n",
              "      <th>max</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>AREA (sq.km)</th>\n",
              "      <td>528.0</td>\n",
              "      <td>1492.005871</td>\n",
              "      <td>2039.453778</td>\n",
              "      <td>0.0</td>\n",
              "      <td>425.000</td>\n",
              "      <td>882.000</td>\n",
              "      <td>1734.2500</td>\n",
              "      <td>18374.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ALL SEXES (RURAL)</th>\n",
              "      <td>528.0</td>\n",
              "      <td>246278.011364</td>\n",
              "      <td>271189.816559</td>\n",
              "      <td>0.0</td>\n",
              "      <td>50934.500</td>\n",
              "      <td>165241.000</td>\n",
              "      <td>312911.2500</td>\n",
              "      <td>2297375.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>MALE (RURAL)</th>\n",
              "      <td>528.0</td>\n",
              "      <td>125275.687500</td>\n",
              "      <td>137563.021458</td>\n",
              "      <td>0.0</td>\n",
              "      <td>27127.250</td>\n",
              "      <td>84134.500</td>\n",
              "      <td>160502.2500</td>\n",
              "      <td>1172995.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>FEMALE (RURAL)</th>\n",
              "      <td>528.0</td>\n",
              "      <td>120984.149621</td>\n",
              "      <td>133716.898296</td>\n",
              "      <td>0.0</td>\n",
              "      <td>23979.000</td>\n",
              "      <td>82044.000</td>\n",
              "      <td>152219.0000</td>\n",
              "      <td>1124167.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TRANSGENDER (RURAL)</th>\n",
              "      <td>528.0</td>\n",
              "      <td>18.174242</td>\n",
              "      <td>25.522248</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.000</td>\n",
              "      <td>10.000</td>\n",
              "      <td>25.0000</td>\n",
              "      <td>213.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>SEX RATIO (RURAL)</th>\n",
              "      <td>528.0</td>\n",
              "      <td>98.982614</td>\n",
              "      <td>26.812660</td>\n",
              "      <td>0.0</td>\n",
              "      <td>101.105</td>\n",
              "      <td>105.285</td>\n",
              "      <td>108.3475</td>\n",
              "      <td>139.38</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AVG HOUSEHOLD SIZE (RURAL)</th>\n",
              "      <td>528.0</td>\n",
              "      <td>6.277064</td>\n",
              "      <td>2.074947</td>\n",
              "      <td>0.0</td>\n",
              "      <td>5.700</td>\n",
              "      <td>6.310</td>\n",
              "      <td>7.2000</td>\n",
              "      <td>12.43</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>POPULATION 1998 (RURAL)</th>\n",
              "      <td>528.0</td>\n",
              "      <td>167427.994318</td>\n",
              "      <td>178388.976993</td>\n",
              "      <td>0.0</td>\n",
              "      <td>35273.500</td>\n",
              "      <td>117206.500</td>\n",
              "      <td>213054.2500</td>\n",
              "      <td>1044035.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ANNUAL GROWTH RATE (RURAL)</th>\n",
              "      <td>528.0</td>\n",
              "      <td>3.124792</td>\n",
              "      <td>9.577872</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.440</td>\n",
              "      <td>2.030</td>\n",
              "      <td>2.8125</td>\n",
              "      <td>100.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ALL SEXES (URBAN)</th>\n",
              "      <td>528.0</td>\n",
              "      <td>140863.528409</td>\n",
              "      <td>351246.279136</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.000</td>\n",
              "      <td>43254.500</td>\n",
              "      <td>117814.7500</td>\n",
              "      <td>3653616.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>MALE (URBAN)</th>\n",
              "      <td>528.0</td>\n",
              "      <td>72843.386364</td>\n",
              "      <td>182349.241379</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.000</td>\n",
              "      <td>21980.000</td>\n",
              "      <td>60301.7500</td>\n",
              "      <td>1905921.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>FEMALE (URBAN)</th>\n",
              "      <td>528.0</td>\n",
              "      <td>67997.865530</td>\n",
              "      <td>168872.528212</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.000</td>\n",
              "      <td>20999.000</td>\n",
              "      <td>57465.2500</td>\n",
              "      <td>1746900.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TRANSGENDER (URBAN)</th>\n",
              "      <td>528.0</td>\n",
              "      <td>22.276515</td>\n",
              "      <td>66.068127</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.000</td>\n",
              "      <td>3.000</td>\n",
              "      <td>19.0000</td>\n",
              "      <td>795.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>SEX RATIO (URBAN)</th>\n",
              "      <td>528.0</td>\n",
              "      <td>75.411269</td>\n",
              "      <td>49.687341</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.000</td>\n",
              "      <td>103.195</td>\n",
              "      <td>107.0400</td>\n",
              "      <td>297.81</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AVG HOUSEHOLD SIZE (URBAN)</th>\n",
              "      <td>528.0</td>\n",
              "      <td>4.406402</td>\n",
              "      <td>2.948336</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.000</td>\n",
              "      <td>5.755</td>\n",
              "      <td>6.3400</td>\n",
              "      <td>10.06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>POPULATION 1998 (URBAN)</th>\n",
              "      <td>528.0</td>\n",
              "      <td>80144.566288</td>\n",
              "      <td>202312.019227</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.000</td>\n",
              "      <td>21298.000</td>\n",
              "      <td>65422.2500</td>\n",
              "      <td>2075867.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ANNUAL GROWTH RATE (URBAN)</th>\n",
              "      <td>528.0</td>\n",
              "      <td>1.920814</td>\n",
              "      <td>2.098908</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.000</td>\n",
              "      <td>1.855</td>\n",
              "      <td>2.9850</td>\n",
              "      <td>19.78</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ca72f292-c9ee-4895-b241-5a2908cc119e')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-ca72f292-c9ee-4895-b241-5a2908cc119e button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-ca72f292-c9ee-4895-b241-5a2908cc119e');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-4945dd63-9618-42ca-8325-b45441849558\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4945dd63-9618-42ca-8325-b45441849558')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-4945dd63-9618-42ca-8325-b45441849558 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 17,\n  \"fields\": [\n    {\n      \"column\": \"count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 528.0,\n        \"max\": 528.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          528.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 76480.66841493991,\n        \"min\": 1.920814393939394,\n        \"max\": 246278.01136363635,\n        \"num_unique_values\": 17,\n        \"samples\": [\n          1492.005871212121\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"std\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 115208.79846009355,\n        \"min\": 2.0749468568721596,\n        \"max\": 351246.2791356469,\n        \"num_unique_values\": 17,\n        \"samples\": [\n          2039.453778210461\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"min\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 0.0,\n        \"max\": 0.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"25%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15874.187366490803,\n        \"min\": 0.0,\n        \"max\": 50934.5,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          1.44\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"50%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 49895.594635653346,\n        \"min\": 1.855,\n        \"max\": 165241.0,\n        \"num_unique_values\": 17,\n        \"samples\": [\n          882.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"75%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 93762.80076475472,\n        \"min\": 2.8125,\n        \"max\": 312911.25,\n        \"num_unique_values\": 17,\n        \"samples\": [\n          1734.25\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"max\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1119230.145785614,\n        \"min\": 10.06,\n        \"max\": 3653616.0,\n        \"num_unique_values\": 17,\n        \"samples\": [\n          18374.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 59
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.groupby('PROVINCE')['ALL SEXES (RURAL)'].mean()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 272
        },
        "id": "FEljwlzFotJM",
        "outputId": "739cac7d-7d5a-4ffc-e9d8-ada60ab1e7d1"
      },
      "execution_count": 60,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "PROVINCE\n",
              "BALOCHISTAN     67783.465649\n",
              "KPK            350603.380282\n",
              "KPK/FATA        99733.760870\n",
              "PUNJAB         480160.293706\n",
              "SINDH          167968.182482\n",
              "Name: ALL SEXES (RURAL), dtype: float64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ALL SEXES (RURAL)</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>PROVINCE</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>BALOCHISTAN</th>\n",
              "      <td>67783.465649</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>KPK</th>\n",
              "      <td>350603.380282</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>KPK/FATA</th>\n",
              "      <td>99733.760870</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>PUNJAB</th>\n",
              "      <td>480160.293706</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>SINDH</th>\n",
              "      <td>167968.182482</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> float64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 60
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [],
      "metadata": {
        "id": "eahwtd6opqMc"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df.groupby(['PROVINCE','DIVISION', 'DISTRICT'])['ALL SEXES (RURAL)'].mean().sort_values(ascending=False).head(10)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 429
        },
        "id": "j7SSZvlSotMi",
        "outputId": "4f684df8-e746-404d-8257-a90214d5b3c2"
      },
      "execution_count": 61,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "PROVINCE  DIVISION             DISTRICT               \n",
              "KPK       PESHAWAR DIVISION    PESHAWAR DISTRICT          2.297375e+06\n",
              "PUNJAB    SAHIWAL DIVISION     SAHIWAL DISTRICT           9.986635e+05\n",
              "          BAHAWALPUR DIVISION  RAHIM YAR KHAN DISTRICT    9.441948e+05\n",
              "          D.G.KHAN DIVISION    MUZAFFARGARH DISTRICT      9.075345e+05\n",
              "          MULTAN DIVISION      VEHARI DISTRICT            7.986507e+05\n",
              "          SAHIWAL DIVISION     PAKPATTAN DISTRICT         7.676180e+05\n",
              "                               OKARA DISTRICT             7.327540e+05\n",
              "          GUJRANWALA DIVISION  SIALKOT DISTRICT           6.876008e+05\n",
              "          FAISALABAD DIVISION  FAISALABAD DISTRICT        6.859297e+05\n",
              "          MULTAN DIVISION      MULTAN DISTRICT            6.718115e+05\n",
              "Name: ALL SEXES (RURAL), dtype: float64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>ALL SEXES (RURAL)</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>PROVINCE</th>\n",
              "      <th>DIVISION</th>\n",
              "      <th>DISTRICT</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>KPK</th>\n",
              "      <th>PESHAWAR DIVISION</th>\n",
              "      <th>PESHAWAR DISTRICT</th>\n",
              "      <td>2.297375e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th rowspan=\"9\" valign=\"top\">PUNJAB</th>\n",
              "      <th>SAHIWAL DIVISION</th>\n",
              "      <th>SAHIWAL DISTRICT</th>\n",
              "      <td>9.986635e+05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>BAHAWALPUR DIVISION</th>\n",
              "      <th>RAHIM YAR KHAN DISTRICT</th>\n",
              "      <td>9.441948e+05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>D.G.KHAN DIVISION</th>\n",
              "      <th>MUZAFFARGARH DISTRICT</th>\n",
              "      <td>9.075345e+05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>MULTAN DIVISION</th>\n",
              "      <th>VEHARI DISTRICT</th>\n",
              "      <td>7.986507e+05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th rowspan=\"2\" valign=\"top\">SAHIWAL DIVISION</th>\n",
              "      <th>PAKPATTAN DISTRICT</th>\n",
              "      <td>7.676180e+05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>OKARA DISTRICT</th>\n",
              "      <td>7.327540e+05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>GUJRANWALA DIVISION</th>\n",
              "      <th>SIALKOT DISTRICT</th>\n",
              "      <td>6.876008e+05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>FAISALABAD DIVISION</th>\n",
              "      <th>FAISALABAD DISTRICT</th>\n",
              "      <td>6.859297e+05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>MULTAN DIVISION</th>\n",
              "      <th>MULTAN DISTRICT</th>\n",
              "      <td>6.718115e+05</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> float64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 61
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Looking it province level\n",
        "df.groupby('PROVINCE')['POPULATION 1998 (RURAL)']"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ewSycWluotRQ",
        "outputId": "fc0116e4-13e6-427e-c41c-ce3a8457b9f8"
      },
      "execution_count": 62,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<pandas.core.groupby.generic.SeriesGroupBy object at 0x7b021d1f6fe0>"
            ]
          },
          "metadata": {},
          "execution_count": 62
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df['POPULATION 1998 (RURAL)'].sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Jc4m3_3yotXp",
        "outputId": "fb3d4de3-b9c8-4570-9021-2f380957435d"
      },
      "execution_count": 63,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "88401981"
            ]
          },
          "metadata": {},
          "execution_count": 63
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df['ALL SEXES (RURAL)'].sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "yvZbX2V1otbB",
        "outputId": "3db0ab09-c314-48c9-eb63-528bee2871ab"
      },
      "execution_count": 64,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "130034790"
            ]
          },
          "metadata": {},
          "execution_count": 64
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "pop_rular_1998 = df['POPULATION 1998 (RURAL)'].sum()\n",
        "pop_rular_2017 = df['ALL SEXES (RURAL)'].sum()\n",
        "\n",
        "pop_increased = pop_rular_2017 - pop_rular_1998\n",
        "\n",
        "print('The RULAR population from 1998 to 2017 is increased by: ', pop_increased)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0JndwlQIotdJ",
        "outputId": "592b8cac-0e71-4870-d74d-c3eeb8db1164"
      },
      "execution_count": 65,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "The RULAR population from 1998 to 2017 is increased by:  41632809\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Rular_percentage = pop_rular_1998/pop_rular_2017 * 100\n",
        "\n",
        "\n",
        "print('The Rular Population From 1998 to 2017 in percentage is increased by: ', Rular_percentage)\n",
        "# print(f{\"RULAR population from 1998 to 2017 is increased by\", {pop_increased}, \"and in percentage\",{Rular_percentage}})"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "_zdohTf7pDZz",
        "outputId": "dd9577ae-6a69-41c2-f56f-7181e458cdaf"
      },
      "execution_count": 66,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "The Rular Population From 1998 to 2017 in percentage is increased by:  67.98333046102508\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "pop_Urban_1998 = df['POPULATION 1998 (URBAN)'].sum()\n",
        "pop_Urban_2017 = df['ALL SEXES (URBAN)'].sum()\n",
        "\n",
        "pop_increased = pop_Urban_2017 - pop_Urban_1998\n",
        "\n",
        "print('The Urban population from 1998 to 2017 is increased by: ', pop_increased)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5Ll_HSGWpDii",
        "outputId": "29a3dcb1-84a1-4970-ccc3-8c178631a5b5"
      },
      "execution_count": 67,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "The Urban population from 1998 to 2017 is increased by:  32059612\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Urban_percentage = pop_Urban_1998/pop_Urban_2017 * 100\n",
        "\n",
        "\n",
        "\n",
        "print('The Urban Population From 1998 to 2017 in percentage is increased by: ', Urban_percentage)\n",
        "# print(f{\"RULAR population from 1998 to 2017 is increased by\", {pop_increased}, \"and in percentage\",{Rular_percentage}})"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "E1Y2kfF9pDmu",
        "outputId": "1fa2b1f2-3f16-4901-d008-09bd14f76df8"
      },
      "execution_count": 68,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "The Urban Population From 1998 to 2017 in percentage is increased by:  56.89518585330743\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "2ZicteTDpDp6"
      },
      "execution_count": 68,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "FINDINGS\n",
        "Place with the Maximum Area: Punjab has the maximum area according to the box plot.\n",
        "Province with the Maximum Area: Sindh Province in the Sindh district has the maximum area.\n",
        "Maximum Area Value: The maximum area is 18,374 square kilometers.\n",
        "Percentage Increase in Rural Population (1998-2017): The rural population increased by 67.98%.\n",
        "Percentage Increase in Urban Population (1998-2017): The urban population increased by 56.89%."
      ],
      "metadata": {
        "id": "yTO62c9tp87C"
      }
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "JLxJzgq4pDta"
      },
      "execution_count": 68,
      "outputs": []
    }
  ]
}